<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[Dias de Dev]]></title>
    <link href="https://dias.dev/categories/Conceitos.xml" rel="self"/>
    <link href="https://dias.dev"/>
    <updated>2024-09-19T17:01:01+00:00</updated>
    <id>https://dias.dev/</id>
            <author>
            <name><![CDATA[Vinicius Dias]]></name>            <email><![CDATA[vinicius@dias.dev]]></email>        </author>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Intelig√™ncia Artificial com PHP - Executando modelos com TransformersPHP]]></title>
            <link href="https://dias.dev/2024-09-19-inteligencia-artificial-com-php/"/>
            <updated>2024-09-19T00:00:00+00:00</updated>
            <id>https://dias.dev/2024-09-19-inteligencia-artificial-com-php/</id>
            <content type="html"><![CDATA[<p>Intelig√™ncia Artificial √© uma √°rea de estudos que est√° extremamente em alta e nesse v√≠deo n√≥s vamos ver uma das formas poss√≠veis de executar modelos pr√©-treinados com PHP.</p>

<h2 id="o-que-%C3%A9-intelig%C3%AAncia-artificial">O que √© intelig√™ncia artificial</h2>

<p>A intelig√™ncia √© o ramo da ci√™ncia da computa√ß√£o que desenvolve algoritmos e sistemas para permitir que m√°quinas aprendam com dados e realizem tarefas que simulam fun√ß√µes cognitivas humanas.</p>

<p>Existem diversas √°reas de estudo dentro da intelig√™ncia artificial, como <em>Machine Learning</em>, <em>Deep Learning</em>, Processamento de Linguagem Natural, Vis√£o Computacional, Rob√≥tica, entre outras.</p>

<p>Eu j√° escrevi aqui no blog sobre <em>machine learning</em>, mais especificamente sobre <a href="/2024-03-23-o-que-e-machine-learning">como aplicar um algoritmo de classifica√ß√£o com PHP</a>. L√° eu falei um pouco sobre uma t√©cnica chamada de <strong>aprendizado supervisionado</strong>, onde n√≥s fornecemos a um algoritmo um conjunto de dados de entrada e sa√≠da esperada, e ele aprende a mapear esses dados para fazer previs√µes com novos dados.</p>

<p>Agora eu quero falar sobre uma nova √°rea da intelig√™ncia artificial, chamada de <strong>transformers</strong>.</p>

<h2 id="transformers">Transformers</h2>

<p>Transformers s√£o uma arquitetura de rede neural que pode ser utilizada para diversas tarefas, dentre elas, a tradu√ß√£o de texto, a gera√ß√£o de texto, a classifica√ß√£o de texto, a gera√ß√£o de imagens, entre outras. O famoso ChatGPT, por exemplo, utiliza essa arquitetura para gerar e compreender texto.</p>

<p>Existem diversos modelos pr√©-treinados que utilizam essa arquitetura e n√≥s podemos utiliz√°-los de diversas formas diferentes, em diversas linguagens de programa√ß√£o. Nesse texto eu quero te mostrar uma das formas <strong>mais simples</strong> de executar um desses modelos pr√©-treinados com PHP.</p>

<h2 id="transformersphp">TransformersPHP</h2>

<p>Utilizando <a href="/2023-12-18-usando-rust-com-php-e-ffi">PHP e FFI</a>, n√≥s poder√≠amos executar modelos pr√©-treinados de transformers, mas fazer isso manualmente seria uma tarefa muito trabalhosa. Para facilitar nossa vida, h√° algumas bibliotecas, dentre elas, a TransformersPHP. Essa biblioteca faz uso de outras ferramentas por baixo dos panos e abstrai uma grande parte do trabalho, facilitando o uso desse tipo de arquitetura com PHP.</p>

<h3 id="instalando-e-configurando-transformersphp">Instalando e configurando TransformersPHP</h3>

<p>O primeiro passo √© efetivamente instalar a biblioteca em algum projeto PHP. H√° alguns pr√©-requisitos para isso, como ter a extens√£o FFI instalada e habilitada em uma <strong>vers√£o recente do PHP</strong>. Atendidos os pr√©-requisitos (que podem ser conferidos na <a href="https://codewithkyrian.github.io/transformers-php/getting-started#prerequisites">documenta√ß√£o oficial do componente</a>), podemos efetivamente instalar o TransformersPHP utilizando o <em>Composer</em>:</p>

<pre><code class="shell">composer require codewithkyrian/transformers
</code></pre>

<p>Ao instalar o componente, todas as bibliotecas compiladas necess√°rias para o funcionamento do TransformersPHP tamb√©m j√° ser√£o baixadas gra√ßas a um <em>plugin</em> do <em>Composer</em>. Com isso, temos o ambiente pronto para executar modelos pr√©-treinados de transformers com PHP.</p>

<h3 id="resumindo-texto-com-transformersphp">Resumindo texto com TransformersPHP</h3>

<p>Uma das tarefas poss√≠veis utilizando modelos pr√©-treinados de transformers √© a de resumir texto. Voc√™ pode ter essa funcionalidade em seu sistema para resumir grandes conte√∫dos como documentos, not√≠cias, etc. Vou utilizar um modelo treinado com textos em ingl√™s e vou pegar o primeiro par√°grafo da p√°gina da Wikipedia falando sobre a hist√≥ria da Disney.</p>

<pre><code class="php"><br />use function Codewithkyrian\Transformers\Pipelines\pipeline;

$resumidor = pipeline('summarization');
$textoGrande = &lt;&lt;&lt;TEXTO
The Walt Disney Company (commonly referred to as simply Disney) is an American multinational mass media and entertainment conglomerate headquartered at the Walt Disney Studios in Burbank, California. Disney was founded on October 16, 1923, by brothers Walt Disney and Roy Oliver Disney as Disney Brothers Cartoon Studio; it also operated under the names Walt Disney Studio and Walt Disney Productions before changing it to its current name in 1986. In 1928, Disney established itself as a leader in the animation industry with the short film Steamboat Willie. The film used synchronized sound to become the first post-produced sound cartoon, and popularized Mickey Mouse, who became Disney's mascot and corporate icon.
TEXTO;

$resumo = $resumidor($textoGrande);
var_dump($resumo);

</code></pre>

<p>A sa√≠da ser√° algo parecido com o seguinte:</p>

<pre><code>array(1) {
  [0]=&gt;
  array(1) {
    ["summary_text"]=&gt;
    string(113) "The Walt Disney Company is an American multinational mass media and entertainment conglomerate. It was founded on"
  }
}
</code></pre>

<p>Repare que o resumo foi cortado. Isso se d√° pelo fato de um par√¢metro padr√£o de tamanho m√°ximo ser de 20 tokens. N√≥s podemos melhorar essa sa√≠da informando um n√∫mero maior de tokens poss√≠veis a serem gerados pelo modelo, permitindo que ele consiga trabalhar com mais liberdade. Para isso, basta informar o par√¢metro <code>maxNewTokens</code>:</p>

<pre><code class="php">$resumo = $resumidor($textoGrande, maxNewTokens: 100);
</code></pre>

<p>Com esse novo n√∫mero, uma poss√≠vel sa√≠da √© a seguinte:</p>

<pre><code>array(1) {
  [0]=&gt;
  array(1) {
    ["summary_text"]=&gt;
    string(335) "The Walt Disney Company is an American multinational mass media and entertainment conglomerate. It was founded on October 16, 1923, by brothers Walt Disney and Roy Oliver Disney as Disney Brothers Cartoon Studio. It operated under the names Walt Disney Studio and Walt Disney Productions before changing it to its current name in 1986."
  }
}
</code></pre>

<h3 id="entendendo-o-c%C3%B3digo">Entendendo o c√≥digo</h3>

<p>Com um resultado minimamente satisfat√≥rio, vamos entender o que cada parte desse c√≥digo faz. A fun√ß√£o <code>pipeline</code> traz o mais alto n√≠vel de abstra√ß√£o desse componente, nos fornecendo acesso a tarefas pr√©-definidas, como o caso de resumo (<em>summarization</em> em ingl√™s). Outras possibilidades seriam an√°lise de sentimento (<em>sentiment analysis</em>), tradu√ß√£o (<em>translation</em>), etc.</p>

<p>Ao definir uma tarefa, h√° um modelo pr√©-treinado padr√£o j√° definido pelo componente. O segundo par√¢metro da fun√ß√£o <code>pipeline</code> nos permite alterar esse modelo. No caso de resumo, o modelo padr√£o √© o <a href="https://huggingface.co/Xenova/distilbart-cnn-6-6">Xenova/distilbart-cnn-6-6</a>.</p>

<p>Tendo criado nossa <em>pipeline</em>, basta passar o texto que queremos resumir e quaisquer par√¢metros adicionais, sendo que cada tarefa pode ter par√¢metros diferentes. No caso de resumo, o par√¢metro <code>maxNewTokens</code> √© um dos poss√≠veis e a documenta√ß√£o traz os demais.</p>

<h3 id="encontrando-modelos">Encontrando modelos</h3>

<p>O TransformersPHP permite que n√≥s utilizemos diversos modelos dispon√≠veis no <a href="https://huggingface.co/">HuggingFace</a>, que √© uma esp√©cie de reposit√≥rio para modelos de intelig√™ncia artificial para diversas tarefas e com diversas arquiteturas. Alguns modelos exigem um c√≥digo um pouco mais "configur√°vel" do que simplesmente utilizar a fun√ß√£o <code>pipeline</code>, mas isso pode ser assunto para outro texto. Caso se interesse, √© s√≥ deixar aqui nos coment√°rios. üòâ</p>

<h3 id="outras-tarefas-poss%C3%ADveis-com-transformersphp">Outras tarefas poss√≠veis com TransformersPHP</h3>

<h2 id="conclus%C3%A3o">Conclus√£o</h2>

<p>Machine Learning √© uma √°rea de estudos fascinante e pode nos abrir um novo mundo de possibilidades. Se voc√™ se interessou pelo assunto, pode gostar do v√≠deo a seguir onde eu explico novamente o conceito de classifica√ß√£o e o aplico em outro conjunto de dados:</p>

<p><lite-youtube videoid="HP7gluvSY9U" style="background-image: url('https://i.ytimg.com/vi/HP7gluvSY9U/hqdefault.jpg');">
    <a href="https://youtube.com/watch?v=HP7gluvSY9U" class="lty-playbtn" title="Reproduzir v√≠deo">
        <span class="lyt-visually-hidden">Reproduzir v√≠deo: Machine Learning com PHP: Aprendizado de m√°quina na pr√°tica | Dias de Dev</span>
    </a>
</lite-youtube></p>

<p>E para se aprofundar ainda mais no mundo de machine learning, intelig√™ncia artificial e tamb√©m PHP, voc√™ pode aproveitar <a href="">esse cupom de 15% de desconto na Alura</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Kubernetes para Iniciantes: Conceitos B√°sicos e Aplica√ß√µes Pr√°ticas]]></title>
            <link href="https://dias.dev/2024-07-16-kubernetes-para-iniciantes-conceitos-basicos/"/>
            <updated>2024-07-16T00:00:00+00:00</updated>
            <id>https://dias.dev/2024-07-16-kubernetes-para-iniciantes-conceitos-basicos/</id>
            <content type="html"><![CDATA[<p>Kubernetes, ou para abreviar, k8s, √© um orquestrador de cont√™ineres. Nesse texto eu vou te explicar o que isso significa e em que cen√°rios ele √© √∫til. Esse post <strong>n√£o √© um tutorial</strong> de como usar o Kubernetes, mas sim uma explica√ß√£o de conceitos.</p>

<h2 id="o-que-%C3%A9-k8s">O que √© k8s</h2>

<p>Como eu j√° disse, Kubernetes √© um orquestrador de cont√™ineres. Mas o que isso significa? Vamos por partes.</p>

<h3 id="o-que-s%C3%A3o-cont%C3%AAineres">O que s√£o cont√™ineres</h3>

<p>O kubernetes vai te ajudar a organizar uma aplica√ß√£o executada em um ambiente de cont√™ineres (<em>containers</em>), geralmente utilizando Docker. Um <em>container</em> √© uma forma de empacotar uma aplica√ß√£o com todas as suas depend√™ncias, de forma que ela possa ser executada em qualquer ambiente que tenha o Docker instalado. Isso √© muito √∫til para garantir que a aplica√ß√£o vai funcionar da mesma forma em qualquer lugar.</p>

<p>De forma super simplificada, um <em>container</em> √© como se fosse uma m√°quina virtual muito mais leve, pois pode compartilhar recursos do sistema operacional onde ele est√° sendo executado.</p>

<h3 id="docker-compose">Docker compose</h3>

<p>Uma aplica√ß√£o geralmente possui mais de um <em>container</em>. N√≥s temos, por exemplo, um <em>container</em> para a aplica√ß√£o em si, um para um servidor web, outro para um sistema de mensageria, e assim por diante. O Docker Compose √© uma ferramenta que nos ajuda a definir e executar aplica√ß√µes com m√∫ltiplos <em>containers</em>.</p>

<p>Mas para execu√ß√£o de uma aplica√ß√£o como essa em ambiente de produ√ß√£o, o Docker Compose apresenta limita√ß√µes. Se um <em>container</em> falhar, ele n√£o ser√° reiniciado automaticamente. Se voc√™ quiser escalar a aplica√ß√£o, voc√™ ter√° que fazer isso manualmente. E se voc√™ quiser atualizar a aplica√ß√£o, voc√™ ter√° que fazer isso manualmente tamb√©m. Para automatizar essas tarefas, precisamos de um orquestrador de <em>containers</em> mais robusto.</p>

<h3 id="orquestra%C3%A7%C3%A3o">Orquestra√ß√£o</h3>

<p>A orquestra√ß√£o de <em>containers</em> √© o processo de gerenciar a execu√ß√£o de m√∫ltiplos <em>containers</em> em um ambiente de produ√ß√£o. Isso inclui tarefas como:</p>

<ul>
<li>Monitorar os recursos utilizados por cada <em>container</em>;</li>
<li>Escalar automaticamente o n√∫mero de <em>containers</em> caso necess√°rio;</li>
<li>Reiniciar um <em>container</em> em caso de falhar;</li>
<li>Permitir a atualiza√ß√£o de uma aplica√ß√£o sem downtime;</li>
<li>Expor uma forma de acessar os <em>containers</em> sem precisar saber em qual m√°quina eles est√£o rodando.</li>
</ul>

<p>Existem alguns orquestradores de <em>containers</em> no mercado, como o Docker Swarm, o Apache Mesos e o Kubernetes. O Kubernetes √© o mais popular deles, sendo sobre ele que vamos falar aqui.</p>

<h2 id="conceitos-de-kubernetes">Conceitos de kubernetes</h2>

<h3 id="cluster">Cluster</h3>

<p>Um cluster Kubernetes nada mais √© do que um ambiente onde voc√™ vai executar suas aplica√ß√µes. Esse ambiente precisa estar configurado para que o Kubernetes consiga ter acesso para gerenciar os diversos recursos que sua aplica√ß√£o vai precisar.</p>

<p>Para executar os recursos necess√°rios para sua aplica√ß√£o, obviamente voc√™ vai precisar de m√°quinas. Essas m√°quinas podem ser disponibilizadas de diversas formas diferentes. Cada ambiente pode disponibilizar um cluster de forma diferente, ou voc√™ mesmo pode configurar um cluster de forma que acesse os recursos dessas m√°quinas de formas diferentes.</p>

<p>Ambientes em nuvem, como AWS, Azure, Google Cloud Platform, Digital Ocean e v√°rios outros, disponibilizam clusters gerenciados de kubernetes para facilitar a configura√ß√£o. Caso prefira, voc√™ tamb√©m pode configurar manualmente um cluster de kubernetes. Inclusive, para executar um cluster localmente, normalmente n√≥s configuramos um cluster de forma simplificada utilizando ferramentas como Minikube ou Kind.</p>

<p>Um cluster Kubernetes √© composto por <em>Nodes</em>, que basicamente s√£o as m√°quinas que executaram a sua aplica√ß√£o. Existem os <em>master nodes</em> e <em>worker nodes</em>. Os <em>master nodes</em> s√£o respons√°veis por gerenciar o cluster, realizando as a√ß√µes de criar, reiniciar e remover recursos, enquanto os <em>worker nodes</em> s√£o respons√°veis por efetivamente executar os recursos que rodar√£o a aplica√ß√£o.</p>

<p>Vamos entender um pouco melhor sobre o que s√£o esses "recursos".</p>

<h3 id="pod">Pod</h3>

<p>Um <em>Pod</em> √© a menor unidade de execu√ß√£o no Kubernetes. Ele √© composto por um ou mais <em>containers</em> que compartilham recursos, como rede e armazenamento. Normalmente, um <em>Pod</em> cont√©m apenas um <em>container</em>, mas √© poss√≠vel ter mais de um <em>container</em> em um <em>Pod</em>.</p>

<p>Para resumir, um <em>Pod</em> √© uma casca que envolve um <em>container</em> da sua aplica√ß√£o e permite que o Kubernetes fa√ßa a gest√£o.</p>

<h3 id="service">Service</h3>

<p>Quando trabalhamos com <em>containers</em> localmente, podemos acess√°-los diretamente de nossa m√°quina a partir de portas mapeadas. Quando trabalhamos em um cluster Kubernetes, n√≥s precisamos expor o acesso aos <em>Pods</em> de uma forma mais organizada. Para isso utilizamos <em>Services</em>.</p>

<p>Um <em>service</em> pode expor um <em>Pod</em> somente para outros <em>Pods</em> dentro do mesmo cluster ou para fora, permitindo acesso externo (via internet). Ele √© uma forma de abstrair o acesso a um <em>Pod</em>, permitindo que ele seja acessado de forma mais organizada.</p>

<h3 id="deployment">Deployment</h3>

<p>Algo que foi citado anteriormente √© que o Kubernetes permite que voc√™ atualize sua aplica√ß√£o sem downtime. Para isso, voc√™ pode utilizar um <em>Deployment</em>. Um deployment garante que um n√∫mero espec√≠fico de <em>Pods</em> esteja sempre rodando. Se voc√™ atualizar a imagem de um <em>container</em> em um <em>Deployment</em>, o Kubernetes vai criar novos <em>Pods</em> com a nova imagem e remover os antigos, garantindo que a aplica√ß√£o esteja sempre dispon√≠vel.</p>

<p>Existem diversas estrat√©gias para que um <em>deployment</em> seja feito, mas o padr√£o j√° permite que voc√™ fa√ßa isso sem downtime.</p>

<h3 id="autoscaling">Autoscaling</h3>

<p>O Kubernetes permite que voc√™ configure regras para que o n√∫mero de <em>Pods</em> seja aumentado ou diminu√≠do automaticamente. Isso √© muito √∫til para aplica√ß√µes que possuem picos de acesso em determinados momentos do dia, por exemplo, ou para garantir que sua aplica√ß√£o esteja pronta para receber um n√∫mero inesperado de acessos.</p>

<p>Isso pode ser feito atrav√©s de um recurso chamado <em>Horizontal Pod Autoscaler</em> (HPA).</p>

<p>Outra possibilidade de escalabilidade √© a vertical, que √© aumentar a capacidade de uma m√°quina. O Kubernetes tamb√©m permite que voc√™ configure regras para que o tamanho de um <em>Pod</em> seja aumentado ou diminu√≠do automaticamente. Isso √© feito atrav√©s de um recurso chamado <em>Vertical Pod Autoscaler</em> (VPA). Embora seja menos comum, n√£o deixa de ser uma alternativa.</p>

<h2 id="como-k8s-%C3%A9-utilizado">Como k8s √© utilizado</h2>

<p>Em uma aplica√ß√£o executada via kubernetes, normalmente voc√™ vai ter um cluster configurado localmente com ferramentas que simplificam esse trabalho, como Minikube ou Kind. Al√©m disso, o ambiente de produ√ß√£o precisa tamb√©m de um cluster configurado, mas de forma muito mais robusta. Como j√° foi dito, ambientes em nuvem disponibilizam clusters gerenciados de kubernetes para facilitar essa configura√ß√£o, mas nada te impede de realizar toda a configura√ß√£o de um cluster manualmente.</p>

<h3 id="acesso-%C3%A0s-funcionalidades">Acesso √†s funcionalidades</h3>

<p>Para acessar as funcionalidades que um cluster kubernetes exp√µe, como por exemplo, criar pods, services e deployments, voc√™ pode utilizar a linha de comando, atrav√©s do <code>kubectl</code>, que √© a ferramenta oficial de linha de comando do Kubernetes.</p>

<p>Com essa ferramenta voc√™ pode tanto realizar altera√ß√µes em seu cluster local como realizar deploys automatizados no ambiente de produ√ß√£o.</p>

<h3 id="arquivos-de-configura%C3%A7%C3%A3o">Arquivos de configura√ß√£o</h3>

<p>Para facilitar a cria√ß√£o de recursos no Kubernetes, √© poss√≠vel criar arquivos de configura√ß√£o que descrevem o que voc√™ quer que seja criado. Esses arquivos s√£o escritos em YAML e s√£o passados para o <code>kubectl</code> para que ele possa criar os recursos no cluster.</p>

<p>Um exemplo bem b√°sico de uma aplica√ß√£o Kubernetes que garante deploy sem <em>downtime</em> e assegura que sempre hajam 3 r√©plicas da mesma sendo executadas al√©m de ser exposta para internet pode ser visto no arquivo abaixo:</p>

<pre><code class="yaml">apiVersion: apps/v1
kind: Deployment
metadata:
    name: deployment-da-aplicacao
spec:
    replicas: 3
    selector:
        matchLabels:
            app: minha-aplicacao
    template:
        metadata:
            labels:
                app: minha-aplicacao
        spec:
            containers:
                - name: container-minha-aplicacao
                  image: imagem-docker-minha-aplicacao:latest
                  ports:
                      - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
    name: svc-minha-aplicacao
spec:
    selector:
        app: minha-aplicacao
    ports:
        - protocol: TCP
          port: 80
          targetPort: 8080
    type: LoadBalancer
</code></pre>

<p>Com um simples comando <code>kubectl apply -f arquivo.yaml</code>, desde que o <code>kubectl</code> esteja corretamente configurado para acessar o <em>cluster</em>, todas as configura√ß√µes descritas no arquivo ser√£o aplicadas no cluster.</p>

<h2 id="conclus%C3%A3o">Conclus√£o</h2>

<p>Obviamente isso n√£o √© tudo que se h√° para saber sobre Kubernetes. Mesmo conceitos b√°sicos como ConfigMap e Secrets foram deixados de fora para manter o texto breve. Mas a ideia por tr√°s da ferramenta √© essa: permitir que voc√™ gerencie sua aplica√ß√£o de forma mais organizada, escal√°vel e resiliente.</p>

<p>Caso voc√™ queira aprender mais sobre Kubernetes, colocando a m√£o na massa e aplicando os conceitos desse texto e muitos outros, a Alura possui diversos cursos sobre o assunto e aqui voc√™ tem <a href="https://tidd.ly/3WmC1yi">15% de desconto</a> para assinar a plataforma.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Locks de bancos de dados: Como Funcionam os Bloqueios Exclusivos e Compartilhados]]></title>
            <link href="https://dias.dev/2024-05-10-locks-exclusivos-e-compartilhados-sql/"/>
            <updated>2024-05-10T00:00:00+00:00</updated>
            <id>https://dias.dev/2024-05-10-locks-exclusivos-e-compartilhados-sql/</id>
            <content type="html"><![CDATA[<p><em>Locks</em> (bloqueios) de bancos de dados s√£o uma t√©cnica utilizada para garantir a consist√™ncia dos dados quando diversas transa√ß√µes s√£o executadas em forma concorrente. Vamos entender nesse texto a diferen√ßa entre dois tipos de <em>locks</em> de bancos de dados: bloqueios exclusivos (<em>exclusive locks</em>) e bloqueios compartilhados (<em>shared locks</em>).</p>

<h2 id="o-que-s%C3%A3o-bloqueios-de-bancos-de-dados">O que s√£o bloqueios de bancos de dados</h2>

<p>Antes de conhecermos os tipos de <em>locks</em>, √© importante entendermos <strong>o que s√£o</strong> os bloqueios dos bancos de dados. Imagine o seguinte cen√°rio: um produto est√° a venda e possui apenas 1 unidade em estoque. O que acontece se 2 pessoas clicarem no bot√£o de compra simultaneamente? Se voc√™ tiver um c√≥digo semelhante ao seguinte, ter√° problemas.</p>

<pre><code class="sql">SELECT estoque FROM produto WHERE id = ?;

-- Na aplica√ß√£o, verifica se estoque &gt; 0.
-- Se sim:
UPDATE produto SET estoque = estoque - 1 WHERE id = ?;
</code></pre>

<p>O que acontece √© que se duas pessoas clicarem em "comprar" ao mesmo tempo, ambas ter√£o como resultado do <code>SELECT</code> o produto com 1 unidade em estoque, e ambas subtrair√£o esse item do estoque, gerando uma venda a mais do que o permitido.
Agora imagine se 100 pessoas comprarem em simult√¢neo. E se 1000 pessoas o fizerem? Para esse cen√°rio existem os bloqueios (<em>locks</em>) de bancos de dados.</p>

<h2 id="bloqueios-impl%C3%ADcitos">Bloqueios impl√≠citos</h2>

<p>Um "detalhe" que nem toda pessoa iniciante no mundo de banco de dados sabe √© que mesmo sem conhecer o conceito de <em>locks</em>, eles ainda s√£o utilizados por <em>queries</em> do dia-a-dia. Ao realizar o <code>UPDATE</code> citado no par√°grafo anterior, por exemplo, h√° um bloqueio no registro que est√° sendo alterado. Isso significa que se duas conex√µes tentarem realizar o <code>UPDATE</code> ao mesmo tempo, uma delas conseguir√° executar enquanto a outra ficar√° em um estado de espera at√© que a primeira termine. S√≥ ent√£o a segunda poder√° prosseguir e ser executada.</p>

<p>Se n√£o fosse assim, em nosso exemplo uma das compras poderia iniciar a altera√ß√£o (<code>UPDATE</code>) da quantidade de estoque (de 1 para 0), e antes dessa instru√ß√£o finalizar no banco de dados, a outra compra poderia realizar exatamente a mesma opera√ß√£o. Sendo assim, as duas compras teriam subtra√≠do apenas 1 item do estoque, gerando um problema completamente diferente.</p>

<p>Quando realizamos opera√ß√µes de <em>DML</em>, ou seja, opera√ß√µes como <code>INSERT</code>, <code>UPDATE</code> e <code>DELETE</code>, os registros que ser√£o afetados s√£o bloqueados para que nenhum outro comando que esteja sendo executado em paralelo cause problemas de consist√™ncia. Isso ocorre automaticamente, por isso o nome de "bloqueios impl√≠citos" (<em>implicit locking</em>).</p>

<h2 id="bloqueios-expl%C3%ADcitos">Bloqueios expl√≠citos</h2>

<p>Em diversos cen√°rios, n√≥s precisamos bloquear algum(ns) registro(s) de forma manual, pois n√£o ser√° executada apenas 1 <em>query</em> nele(s). O exemplo da compra de um produto √© exatamente esse caso: primeiro n√≥s buscamos os dados do produto, e ap√≥s verificar esses dados em nossa aplica√ß√£o, n√≥s realizamos a atualiza√ß√£o. Ou seja, realizamos primeiro um <code>SELECT</code> e depois um <code>UPDATE</code>.</p>

<p>O problema √© que precisamos bloquear esse registro j√° no momento do <code>SELECT</code> para que nenhuma consulta sendo executada concorrentemente busque a quantia incorreta do estoque, ou seja, precisamos fazer isso de forma expl√≠cita. Dessa forma, n√≥s dizemos que queremos obter um <em>lock</em> para o registro em quest√£o, garantindo que antes de terminarmos a atualiza√ß√£o, ningu√©m vai acess√°-lo.</p>

<p>Para realizarmos um bloqueio expl√≠cito (<em>explicit locking</em>) n√≥s precisamos, antes de qualquer coisa, envolver as <em>queries</em> em uma transa√ß√£o. Ent√£o a primeira mudan√ßa no c√≥digo do exemplo anterior seria iniciar uma transa√ß√£o antes de buscar o estoque e encerr√°-la somente ap√≥s realizar a altera√ß√£o.</p>

<pre><code class="sql">START TRANSACTION;
    SELECT estoque FROM produto WHERE id = ?;

    -- Na aplica√ß√£o, verifica se estoque &gt; 0.
    -- Se sim:
    UPDATE produto SET estoque = estoque - 1 WHERE id = ?;
COMMIT;
</code></pre>

<p>Claro que os comandos de iniciar e finalizar a transa√ß√£o seriam realizados utilizando a interface de acesso ao banco de dados que sua linguagem de programa√ß√£o fornece, mas por baixo dos panos, as instru√ß√µes de in√≠cio e t√©rmino de transa√ß√£o seriam enviados para o banco da forma como o exemplo mostra.</p>

<p>Por√©m, essa modifica√ß√£o ainda n√£o faz com que o nosso objetivo seja atingido. V√°rias transa√ß√µes podem buscar o estoque ainda antes dele ter sido atualizado e elas podem acabar realizando o <code>UPDATE</code> em um item que possivelmente teria o estoque zerado. Para informarmos ao banco que apenas uma transa√ß√£o por vez pode manipular esse registro, precisamos modificar nossa <em>query</em> <code>SELECT</code>. E √© nessa modifica√ß√£o que vamos identificar se √© um <em>lock</em> exclusivo ou compartilhado.</p>

<h3 id="bloqueio-exclusivo">Bloqueio exclusivo</h3>

<p>Para nosso cen√°rio, n√≥s queremos obter um tipo de bloqueio para podermos atualizar o registro futuramente na transa√ß√£o, ou seja, n√≥s vamos informar que somente 1 transa√ß√£o pode realizar essa opera√ß√£o por vez. Isso acontece porque antes da transa√ß√£o atual finalizar, o valor do estoque pode ser alterado, ent√£o as outras transa√ß√µes concorrentes precisam esperar a transa√ß√£o atual ser finalizada para s√≥ ent√£o poderem buscar o dado. Assim garantimos que todas as transa√ß√µes recuperar√£o a informa√ß√£o correta.</p>

<p>Essa √© a ideia de um bloqueio exclusivo (<em>exclusive lock</em>) e pode ser feito adicionando um simples <code>FOR UPDATE</code> ao nosso <code>SELECT</code>:</p>

<pre><code class="sql">START TRANSACTION;
    SELECT estoque
      FROM produto
     WHERE id = ?
       FOR UPDATE;

    -- Na aplica√ß√£o, verifica se estoque &gt; 0.
    -- Se sim:
    UPDATE produto SET estoque = estoque - 1 WHERE id = ?;
COMMIT;
</code></pre>

<p>Agora, ao realizar esse <code>SELECT</code>, n√≥s estamos informando ao banco que nenhuma outra transa√ß√£o pode realizar nenhuma opera√ß√£o nos registros que esse <code>SELECT</code> nos retornar at√© que a transa√ß√£o atual seja encerrada, ou seja, independente de quantas compras forem feitas de forma paralela, apenas uma transa√ß√£o por vez poder√° agir sobre os dados desse produto. Isso garante que aquela verifica√ß√£o de <code>estoque &gt; 0</code> seja segura, j√° que em uma nova transa√ß√£o o estoque s√≥ ser√° buscado ap√≥s todas as altera√ß√µes de uma transa√ß√£o existente sejam realizadas.</p>

<p>Essa foi a estrat√©gia utilizada na explica√ß√£o de outro conceito no meu canal do YouTube, onde falo sobre bloqueios pessimistas (<em>pessimistic locking</em>) e bloqueios otimistas (<em>optimistic locking</em>):</p>

<p><lite-youtube videoid="BsCdPKNX8rc" style="background-image: url('https://i.ytimg.com/vi/BsCdPKNX8rc/hqdefault.jpg');">
    <a href="https://youtube.com/watch?v=BsCdPKNX8rc" class="lty-playbtn" title="Reproduzir v√≠deo">
        <span class="lyt-visually-hidden">Reproduzir v√≠deo: Garantindo a Consist√™ncia de Dados com Locks Pessimistas e Locks Otimistas | Dias de Dev</span>
    </a>
</lite-youtube></p>

<h3 id="bloqueio-compartilhado">Bloqueio compartilhado</h3>

<p>Agora imagine o seguinte cen√°rio: voc√™ est√° realizando diversas consultas no banco de dados para montar um relat√≥rio. Sendo assim, entre as diversas consultas que ser√£o executadas, voc√™ quer garantir a consist√™ncia, mas o tipo de bloqueio que voc√™ quer adquirir agora √© um pouco menos "restrito", j√° que m√∫ltiplas transa√ß√µes gerando o relat√≥rio podem ser executadas de forma paralela sem nenhum problema.</p>

<p>Isso quer dizer que o bloqueio que queremos obter agora n√£o vai ficar esperando outras transa√ß√µes que apenas pretendem ler o mesmo registro. E quando obtivermos esse bloqueio, outras transa√ß√µes continuam podendo ler os registros bloqueados sem problema. Apenas modifica√ß√µes nesses registros precisar√£o aguardar que a transa√ß√£o finalize, garantindo a consist√™ncia do relat√≥rio.</p>

<p>Para esse cen√°rio, o <em>lock</em> exclusivo (atrav√©s do <code>FOR UPDATE</code>) vai realizar um bloqueio muito "agressivo", n√£o atingindo nosso objetivo e travando at√© mesmo as consultas dos demais relat√≥rios. Ao inv√©s de utilizamos <code>FOR UPDATE</code>, vamos utilizar a instru√ß√£o <code>FOR SHARE</code> para a cria√ß√£o desse <strong>bloqueio compartilhado</strong> (<em>shared lock</em>).</p>

<pre><code class="sql">START TRANSACTION;
    SELECT estoque
      FROM produto
     WHERE id = ?
       FOR SHARE;

    -- Demais consultas
COMMIT;
</code></pre>

<p>Isso garante que outras transa√ß√µes possam realizar consultas nos registros bloqueados (e obter <em>locks</em> compartilhados), mas n√£o possam realizar nenhuma modifica√ß√£o (nem obter <em>locks</em> exclusivos), ou seja, nenhuma atualiza√ß√£o pode ser feita no produto selecionado at√© que a transa√ß√£o seja finalizada, mas outras transa√ß√µes podem ler os detalhes desse produto de forma concorrente sem nenhum problema.</p>

<h2 id="conclus%C3%A3o">Conclus√£o</h2>

<p>Bancos de dados e especificamente <em>locks</em> s√£o um assunto muito extenso e importante n√£o s√≥ para desenvolvedores, mas tamb√©m para <em>QAs</em>, <em>tech leads</em>, <em>SREs</em>, etc. √â de extrema import√¢ncia conhecer bem o funcionamento do banco de dados utilizado para garantir a consist√™ncia e seguran√ßa dos dados da aplica√ß√£o.</p>

<p>Para se aprofundar em assuntos de bancos de dados, recomendo a Alura! L√°, h√° <strong>v√°rios</strong> cursos sobre o assunto, utilizando diversos bancos diferentes como MySQL, PostgreSQL, SQLite, Oracle e SQL Server. Aqui tem um <a href="https://tidd.ly/4d42Myb">cupom de 15% desconto</a> para voc√™ aproveitar a plataforma.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Machine Learning com PHP: Aprendendo a Criar Algoritmos de Classifica√ß√£o]]></title>
            <link href="https://dias.dev/2024-03-23-o-que-e-machine-learning/"/>
            <updated>2024-03-23T00:00:00+00:00</updated>
            <id>https://dias.dev/2024-03-23-o-que-e-machine-learning/</id>
            <content type="html"><![CDATA[<p>Machine Learning √© uma das √°reas de estudo do ramo de Intelig√™ncia Artificial (IA) que nos permite criar sistemas que aprendem a partir de dados. Aplicar Machine Learning com PHP √© uma tarefa que, embora incomum, √© perfeitamente poss√≠vel. Neste texto eu vou te mostrar como escrever um algoritmo de classifica√ß√£o com PHP.</p>

<h2 id="o-que-%C3%A9-um-algoritmo-de-classifica%C3%A7%C3%A3o%3F">O que √© um algoritmo de classifica√ß√£o?</h2>

<p>Antes de colocarmos a m√£o na massa, √© importante conhecer alguns conceitos. Machine Learning √© uma √°rea bastante ampla e repleta de possibilidades. Dentre elas, h√° os algoritmos de classifica√ß√£o. Basicamente, um algoritmo de classifica√ß√£o visa identificar a qual categoria algo pertence, ou seja, retornar a classe prevista para a amostra analisada. Um exemplo bastante comum de algoritmo de classifica√ß√£o √© o filtro de spam de e-mails. Uma mensagem pode ser classificada como indesejada ou n√£o. Ent√£o, ap√≥s treinar um modelo, podemos, com as informa√ß√µes da mensagem, tentar prever em qual das duas categorias ela se encaixa.</p>

<p>A inten√ß√£o deste texto √© mostrar como aplicar um algoritmo de classifica√ß√£o com PHP, ent√£o vou parar com os detalhes te√≥ricos por aqui. Caso voc√™ se interesse por aprendizado de m√°quina e queira continuar os estudos, √© fortemente recomendado que voc√™ entenda melhor a teoria por tr√°s dos pontos citados nesse par√°grafo.</p>

<h2 id="como-fazer-machine-learning-com-php">Como fazer Machine Learning com PHP</h2>

<p>H√° algumas bibliotecas dispon√≠veis para aplicarmos t√©cnicas de aprendizagem de m√°quina com PHP, mas no momento da escrita deste texto a mais atual e ativamente mantida se chama <a href="https://rubixml.com/">RubixML</a>. Essa biblioteca nos permite realizar diversas tarefas como Deep Learning, Regress√£o, Clusteriza√ß√£o e, claro, Classifica√ß√£o.</p>

<p>Para instalar RubixML em um projeto PHP podemos utilizar o composer:</p>

<pre><code class="shell">$ composer require rubix/ml
</code></pre>

<p>Esse componente n√£o tem requisitos obrigat√≥rios, mas h√° algumas recomenda√ß√µes como a <a href="/2022-02-13-extensoes-php">extens√£o</a> <em>Tensor</em> para computa√ß√£o otimizada de vetores e matrizes e a <em>parallel</em> para realizar computa√ß√£o <a href="/2023-07-18-programacao-concorrente-assincrona-e-paralela">paralela</a>. Para executar os c√≥digos deste texto, nada disso √© necess√°rio.</p>

<h2 id="o-que-vamos-prever-com-machine-learning">O que vamos prever com Machine Learning</h2>

<p>N√≥s vamos treinar um modelo de classifica√ß√£o usando PHP para prever se determinado jogador vai durar mais de 5 anos na liga profissional de basquete estadunidense, a famosa NBA.</p>

<p>Para isso, precisamos de estat√≠sticas de diversos jogadores antes de entrarem na NBA e o resultado deles, ou seja, se jogaram durante pelo menos 5 anos ap√≥s chegarem na liga. Esses dados podem ser encontrados <a href="https://github.com/ptyadana/Data-Science-and-Machine-Learning-Projects-Dojo/blob/master/Project%20-%20Predict%20Career%20Longevity%20for%20NBA%20Rookies%20with%20Binary%20Classification%20-%20Logistic%20Regression/data/nba_logreg.csv">neste arquivo</a> que cont√©m informa√ß√µes como o n√∫mero de partidas jogadas, n√∫mero de minutos, quantidade de pontos por jogo, n√∫mero de cestas de 3 pontos feitas, etc. E a √∫ltima coluna cont√©m a classe onde cada jogador se encontra, onde <code>1.0</code> significa que o jogador participou por pelo menos 5 anos da liga e <code>0.0</code> quer dizer que ele ficou menos do que 5 anos.</p>

<h2 id="etapas-do-processo-de-machine-learning">Etapas do processo de Machine Learning</h2>

<p>Em todo processo de Machine Learning n√≥s passamos por algumas etapas ou passos. N√≥s precisamos primeiro analisar os dados. Para isso n√≥s podemos usar at√© o pr√≥prio <em>Excel</em> para gerar gr√°ficos de correla√ß√£o entre cada uma das colunas, entender como cada coluna influencia nas classes, ver itens faltantes, etc.</p>

<p>Ap√≥s a an√°lise dos dados, realizamos o pr√©-processamento deles. Existe toda uma √°rea de estudos, chamada feature engineering, para essa an√°lise e manipula√ß√£o de dados que ser√£o utilizados por um modelo de machine learning. Nessa etapa n√≥s removemos os registros com informa√ß√µes faltantes ou as preenchemos utilizando t√©cnicas adequadas, removemos itens in√∫teis para o treinamento do modelo, adaptamos n√∫meros para estarem na escala correta, etc.</p>

<p>Com os dados corretamente modificados, a pr√≥xima etapa √© o treinamento de um modelo de machine learning. H√° in√∫meros algoritmos poss√≠veis para cada tarefa que machine learning nos permite fazer e com classifica√ß√£o isso n√£o √© diferente. Alguns poss√≠veis modelos de classifica√ß√£o s√£o <em>K Nearest Neighbors</em>, <em>Classification Tree</em>, <em>Naive Bayes</em>, etc. N√≥s vamos selecionar um modelo e trein√°-lo com <strong>parte</strong> dos dados que analisamos e manipulamos.</p>

<p>O motivo de utilizarmos apenas parte dos dados √© porque n√≥s separamos outra parte para testar o modelo treinado. Essa parte separada para teste nos permitir√° verificar qu√£o preciso est√° nosso modelo em classificar o que desejamos, j√° que conhecemos as classes de cada uma das amostras que vamos tentar prever.</p>

<p>Com o teste feito, a √∫ltima etapa entra em a√ß√£o: medi√ß√£o. N√≥s medimos os resultados de nosso modelo utilizando diversas m√©tricas para podermos voltar √† etapa de treino e realizar otimiza√ß√µes, seja alterando os par√¢metros do modelo utilizado ou at√© selecionando outro algoritmo.</p>

<h3 id="an%C3%A1lise-dos-dados">An√°lise dos dados</h3>

<p>Agora vamos √† pr√°tica. A primeira etapa √© recuperar os dados. Como eu comentei anteriormente, parte da an√°lise pode ser feita em ferramentas externas como o <em>Excel</em>. L√° voc√™ pode gerar gr√°ficos e analisar os valores para obter percep√ß√µes interessantes.</p>

<p>E para recuperar os dados no c√≥digo PHP, a tarefa fica at√© f√°cil. A biblioteca <em>RubixML</em> nos permite criar um conjunto de dados a partir de arrays ou qualquer outro objeto iter√°vel, e a pr√≥pria biblioteca nos permite tamb√©m criar um iterador a partir de um arquivo CSV. Sendo assim, para criarmos um <em>dataset</em> a partir do arquivo baixado anteriormente, basta o seguinte c√≥digo:</p>

<pre><code class="php">&lt;?php

use Rubix\ML\Datasets\Labeled;
use Rubix\ML\Extractors\CSV;

$arquivoCsv = new CSV(__DIR__ . '/nba_logreg.csv', header: true);
$conjuntoDeDados = Labeled::fromIterator($arquivoCsv);

</code></pre>

<p>Um conjunto de dados classificado (<em>labeled dataset</em>) √© o que queremos para treinar um modelo de classifica√ß√£o.</p>

<h3 id="pr%C3%A9-processamento-do-conjunto-de-dados">Pr√©-processamento do conjunto de dados</h3>

<p>Ap√≥s recuperarmos os dados, precisamos manipul√°-los antes de treinar qualquer modelo. Em nosso caso, algumas manipula√ß√µes simples que podemos fazer:</p>

<ul>
<li>Remover o nome, j√° que n√£o √© relevante para a predi√ß√£o;</li>
<li>Transformar os valores em n√∫meros no PHP, j√° que eles ser√£o importados como strings;</li>
<li>Remover dados com informa√ß√µes faltantes;</li>
</ul>

<p>N√≥s poder√≠amos fazer diversas outras manipula√ß√µes como balanceamento do conjunto de dados, preenchimento dos itens faltantes, etc. Mas essas t√©cnicas j√° seriam um pouco mais avan√ßadas, ent√£o vamos nos ater ao simples. As 3 manipula√ß√µes citadas ficariam assim:</p>

<pre><code class="php">&lt;?php

$conjuntoDeDados = Labeled::fromIterator($arquivoCsv)
    // Remove o nome do jogador de cada amostra
    -&gt;apply(new LambdaFunction(function (array &amp;$amostra) {
        unset($amostra[0]);
        $amostra = array_values($amostra);
    }))
    // Transforma strings num√©ricas em n√∫meros
    -&gt;apply(new NumericStringConverter())
    // Remove amostras com itens faltantes
    -&gt;filter(function (array $amostra) {
        $itensVazios = array_filter(
            $amostra,
            fn ($item) =&gt; !is_numeric($item)
        );

        return empty($itensVazios);
    });
</code></pre>

<p>Agora temos um conjunto de dados sem amostras com informa√ß√µes faltantes, todas as informa√ß√µes s√£o n√∫meros e o nome foi removido de cada amostra.</p>

<h3 id="sele%C3%A7%C3%A3o-e-treinamento-de-um-modelo">Sele√ß√£o e treinamento de um modelo</h3>

<p>Com o conjunto de dados manipulado, chegou a hora de treinar um modelo a partir dele. Como citei anteriormente, vamos dividir parte desse conjunto para treinar o modelo e a outra parte ser√° usada para test√°-lo. Vamos fazer isso de forma proporcional, onde cada parte do conjunto ter√° a mesma propor√ß√£o de jogadores que duraram pelo menos 5 anos e que n√£o duraram. Isso se chama divis√£o estratificada e √© interessante para n√£o ocorrer uma divis√£o desigual onde treinar√≠amos nosso modelo somente com jogadores que n√£o atingiram 5 anos na liga ou vice-versa.</p>

<pre><code class="php">&lt;?php

// ...
use Rubix\ML\Classifiers\KDNeighbors;

// 80% dos dados para treinamento e 20% para teste
[$treinamento, $teste] = $conjuntoDeDados-&gt;stratifiedSplit(0.8);

$modelo = new KDNeighbors();
$modelo-&gt;train($treinamento);

</code></pre>

<p>A partir deste ponto, nossa vari√°vel <code>$modelo</code> possui um modelo de classifica√ß√£o treinado e pronto para realizar predi√ß√µes, identificando se um jogador, baseado nas informa√ß√µes passadas, deve durar pelo menos 5 anos na NBA. Com o modelo treinado, poder√≠amos passar o conjunto de informa√ß√µes de diversos jogadores (um array multidimensional) e o modelo nos devolveria a classifica√ß√£o de cada um deles, ou seja, se cada um deles permaneceria por mais de 5 anos na liga (<code>1.0</code>) ou n√£o (<code>0.0</code>).</p>

<p>Ap√≥s treinar o modelo, vamos test√°-lo para analisar qu√£o corretas est√£o as predi√ß√µes:</p>

<pre><code class="php">&lt;?php

// ...

$predicoesDeTeste = $modelo-&gt;predict($teste);
</code></pre>

<p>Como n√≥s temos os dados de teste, incluindo suas classes (tamb√©m chamadas de labels) e temos as predi√ß√µes, podemos comparar ambos para medir qu√£o corretas s√£o as previs√µes do nosso modelo. Por exemplo, sabendo que determinado jogador realmente jogou por mais de 5 anos na NBA, nosso modelo teria previsto que ele atingiria essa marca ou teria dito que ele n√£o chegaria l√°?</p>

<h3 id="medi%C3%A7%C3%A3o-do-resultado">Medi√ß√£o do resultado</h3>

<p>Existe um conceito chamado matriz de confus√£o (<em>confusion matrix</em>) utilizado para gerar diversas m√©tricas para modelos de machine learning. Essa matriz vai nos dizer o seguinte: baseado nas predi√ß√µes e nas classes dos dados de teste, quanto nosso modelo acertou e errou de cada classe?</p>

<p>Para gerar essa matriz, podemos executar o seguinte c√≥digo:</p>

<pre><code class="php">&lt;?php

use Rubix\ML\CrossValidation\Reports\ConfusionMatrix;

$geradorDeMatriz = new ConfusionMatrix();
$matrizDeConfusao = $geradorDeMatriz-&gt;generate(
    $predicoesDeTeste,
    $teste-&gt;labels()
);
</code></pre>

<p>A vari√°vel <code>$matrizDeConfusao</code> vai ter em seu conte√∫do, algo como:</p>

<pre><code>array(2) {
  '1.0' =&gt; array(2) {
    '1.0' =&gt;
    int(124)
    '0.0' =&gt;
    int(46)
  }
  '0.0' =&gt; array(2) {
    '1.0' =&gt;
    int(42)
    '0.0' =&gt;
    int(55)
  }
}
</code></pre>

<p>Isso seria equivalente √† seguinte tabela:</p>

<table aria-label="Tabela de matriz de confus√£o">
    <thead>
        <tr>
          <th scope="col"></th>
          <th scope="col">1.0</th>
          <th scope="col">0.0</th>
        </tr>
    </thead>
    <tbody>
        <tr>
          <th scope="row">1.0</th>
          <td>124</td>
          <td>46</td>
        </tr>
        <tr>
          <th scope="row">0.0</th>
          <td>42</td>
          <td>55</td>
        </tr>
    </tbody>
</table>

<p>Ou seja, dos jogadores que nosso modelo previu que durariam pelo menos 5 anos na NBA, 124 realmente duraram e 46 n√£o. J√° dos jogadores que o modelo previu que n√£o durariam mais de 5 anos, 55 realmente n√£o duraram, enquanto 42 duraram. Ent√£o o modelo realmente acertou mais do que errou.</p>

<h3 id="m%C3%A9tricas-para-otimiza%C3%A7%C3%A3o">M√©tricas para otimiza√ß√£o</h3>

<p>Como foi citado anteriormente, a matriz de confus√£o √© utilizada para calcular m√©tricas. Apenas a matriz de confus√£o n√£o vai ser suficiente para tomarmos a decis√£o de se nosso modelo √© suficiente para nosso objetivo ou n√£o.</p>

<p>Uma simples m√©trica que pode ser calculada √© a acur√°cia do modelo. Ela basicamente √© a medida da frequ√™ncia em que nosso modelo acertou. √â como perguntar: "de tudo que meu modelo previu, quanto ele acertou?" N√≥s podemos calcular a acur√°cia da seguinte forma:</p>

<pre><code class="php">&lt;?php

use Rubix\ML\CrossValidation\Metrics\Accuracy;

$metrica = new Accuracy();
$acuracia = $metrica-&gt;score($predicoesDeTeste, $teste-&gt;labels());
</code></pre>

<p>O valor de <code>$acuracia</code> vai ser um n√∫mero entre 0 e 1, indicando o percentual geral de acerto do modelo. Essa m√©trica raramente √© suficiente para decidirmos se o modelo est√° otimizado o suficiente ou n√£o. H√° outras m√©tricas como precis√£o, F1, recall, etc. N√≥s podemos ter um artigo inteiro falando sobre as diversas poss√≠veis m√©tricas, ent√£o nesse artigo vou parar aqui, na acur√°cia.</p>

<p>Caso o valor das m√©tricas n√£o seja satisfat√≥rio, podemos realizar otimiza√ß√µes ou modificar completamente o modelo utilizado, at√© que tenhamos o resultado esperado.</p>

<h2 id="conclus%C3%A3o">Conclus√£o</h2>

<p>Machine Learning √© uma √°rea de estudos fascinante e pode nos abrir um novo mundo de possibilidades. Se voc√™ se interessou pelo assunto, pode gostar do v√≠deo a seguir onde eu explico novamente o conceito de classifica√ß√£o e o aplico em outro conjunto de dados:</p>

<p><lite-youtube videoid="HP7gluvSY9U" style="background-image: url('https://i.ytimg.com/vi/HP7gluvSY9U/hqdefault.jpg');">
    <a href="https://youtube.com/watch?v=HP7gluvSY9U" class="lty-playbtn" title="Reproduzir v√≠deo">
        <span class="lyt-visually-hidden">Reproduzir v√≠deo: Machine Learning com PHP: Aprendizado de m√°quina na pr√°tica | Dias de Dev</span>
    </a>
</lite-youtube></p>

<p>E para se aprofundar ainda mais no mundo de machine learning, intelig√™ncia artificial e tamb√©m PHP, voc√™ pode aproveitar <a href="https://tidd.ly/4d42Myb">esse cupom de 15% de desconto na Alura</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Programa√ß√£o ass√≠ncrona, concorrente e paralela]]></title>
            <link href="https://dias.dev/2023-07-18-programacao-concorrente-assincrona-e-paralela/"/>
            <updated>2023-07-18T00:00:00+00:00</updated>
            <id>https://dias.dev/2023-07-18-programacao-concorrente-assincrona-e-paralela/</id>
            <content type="html"><![CDATA[<p>Existem diversas defini√ß√µes para os termos programa√ß√£o ass√≠ncrona e programa√ß√£o concorrente, enquanto programa√ß√£o paralela seja um consenso. Vamos tentar, neste texto, definir de forma mais objetiva e pr√°tica o que esses termos significam e quando n√≥s devemos usar cada uma dessas pr√°ticas.</p>

<h2 id="programa%C3%A7%C3%A3o-ass%C3%ADncrona">Programa√ß√£o ass√≠ncrona</h2>

<p>O termo programa√ß√£o ass√≠ncrona pode se referir a mais de uma coisa na computa√ß√£o e permeia o mundo da programa√ß√£o h√° muito tempo, mas houve um aumento no uso dessas palavras desde a vinda das <em>Promises</em> para o <em>JavaScript</em>.</p>

<h3 id="rede-e-comunica%C3%A7%C3%A3o">Rede e comunica√ß√£o</h3>

<p>Quando programa√ß√£o ass√≠ncrona √© citada no assunto sobre comunica√ß√£o em rede, isso significa que as partes envolvidas na troca de mensagens lidar√£o com essas mensagens quando for poss√≠vel e n√£o necessariamente imediatamente.</p>

<p>Essa defini√ß√£o parece bastante vaga e nada clara, n√£o √© mesmo? Ent√£o vamos tentar usar um exemplo pr√°tico, usando uma linguagem bastante comum na <em>Web</em> (embora esse conceito seja v√°lido para qualquer ecossistema). Quando voc√™ usa a fun√ß√£o <code>fetch</code> do <em>JavaScript</em>, a requisi√ß√£o <em>HTTP</em> ser√° feita, mas a resposta, quando dispon√≠vel, n√£o vai ser tratada imediatamente. O motor de execu√ß√£o do <em>JavaScript</em> vai executar o c√≥digo que lida com essa resposta o mais r√°pido poss√≠vel, mas n√£o ser√° de forma s√≠ncrona ou imediata.</p>

<p>O que isso quer dizer? Ao receber a resposta, o motor de execu√ß√£o do <em>JavaScript</em> vai colocar a fun√ß√£o que lida com essa resposta em uma fila e, assim que poss√≠vel, essa fun√ß√£o ser√° executada. Enquanto a resposta n√£o est√° dispon√≠vel, ou at√© mesmo ap√≥s a resposta chegar, mas antes da fun√ß√£o que lida com ela ter sua vez de ser rodada, outros peda√ßos de c√≥digo podem ser executados.</p>

<p>No exemplo a seguir, usamos <em>Promises</em> para informar qual √© a fun√ß√£o que ser√° adicionada na fila quando a resposta estiver pronta, e at√© l√°, outras linhas de c√≥digo v√£o sendo executadas.</p>

<pre><code class="js">fetch('https://example.com')
  .then(res =&gt; {
    // Essa fun√ß√£o pode lidar com a resposta
  });

// Aqui, outros c√≥digos podem ser executados
// antes mesmo da fun√ß√£o que lida com a resposta
console.log("Outras fun√ß√µes");
</code></pre>

<p>Essa "fila de fun√ß√µes" e delega√ß√£o de execu√ß√£o para um momento futuro √© poss√≠vel gra√ßas a um padr√£o chamado <em>Event Loop</em>. O uso de um <em>Event Loop</em> permite que voc√™ alcance a programa√ß√£o ass√≠ncrona, ou usando um termo menos confuso, <strong>I/O n√£o bloqueante</strong>.</p>

<p>O termo I/O n√£o bloqueante √© muito importante porque √© o que realmente queremos dizer quando nos referimos a programa√ß√£o ass√≠ncrona no contexto de comunica√ß√£o em rede. N√≥s estamos realizando alguma opera√ß√£o de I/O (seja comunica√ß√£o em rede, como no exemplo, ou outras coisas como leitura de arquivos, etc) de forma que o processador n√£o precise ficar esperando pela resposta dessa opera√ß√£o.</p>

<p>H√° outro <a href="/2020-09-16-php-assincrono-de-forma-nativa/">texto aqui no blog</a> explicando como I/O n√£o bloqueante pode ser implementado "na unha" com PHP. Ferramentas como <em>ReactPHP</em> ou <em>Swoole</em> trazem implementa√ß√µes de <em>Event Loops</em> para o mundo PHP, mas bibliotecas mais "simples" como cURL j√° possuem I/O n√£o bloqueante, permitindo a famosa programa√ß√£o ass√≠ncrona.</p>

<h3 id="arquitetura-de-sistemas">Arquitetura de sistemas</h3>

<p>Outro tema que pode receber men√ß√µes do termo programa√ß√£o ass√≠ncrona √© o de <strong>Arquitetura de sistemas</strong>, ou <em>System Design</em>.</p>

<p>Aqui eu vou partir direto para um exemplo para tentar explicar a ideia. Em uma aplica√ß√£o <em>Web</em>, podemos ter tarefas demoradas como gera√ß√£o de relat√≥rios, envios de e-mails, etc. Essas tarefas, se feitas durante uma requisi√ß√£o, podem fazer com que o tempo de resposta seja bem alto, prendendo o cliente <em>HTTP</em> por mais tempo do que necess√°rio.</p>

<p>Uma solu√ß√£o para esse caso √© salvar as tarefas que voc√™ quer executar em uma fila de mensagens, e ter outro processo executando em plano de fundo essas tarefas, de forma que a resposta <em>HTTP</em> possa ser entregue rapidamente ao usu√°rio e as tarefas demoradas ser√£o feitas no futuro, logo, de forma ass√≠ncrona.</p>

<p>O motivo de eu fazer essa explica√ß√£o de forma mais simples e resumida √© que eu j√° gravei um v√≠deo explicando a ideia de processamento ass√≠ncrono e <strong>mensageria</strong>. Voc√™ pode conferir a ideia de programa√ß√£o ass√≠ncrona nesse contexto no v√≠deo abaixo.</p>

<p><lite-youtube videoid="Rx80QRZRgHc">
    <a href="https://youtube.com/watch?v=Rx80QRZRgHc" class="lty-playbtn" title="Reproduzir v√≠deo">
        <span class="lyt-visually-hidden">
            Processamento ass√≠ncrono com mensageria - Escalando aplica√ß√µes Web | Dias de Dev
        </span>
    </a>
</lite-youtube></p>

<h2 id="programa%C3%A7%C3%A3o-paralela">Programa√ß√£o paralela</h2>

<p>Agora vamos √† explica√ß√£o do termo onde h√° um maior consenso: programa√ß√£o paralela.</p>

<p>Como o pr√≥prio nome deixa claro, programa√ß√£o paralela √© o que permite a execu√ß√£o de mais de um peda√ßo de c√≥digo <strong>ao mesmo tempo</strong>, ou seja, de forma paralela. Nos dias atuais, a √™nfase precisa ser nas palavras <strong>ao mesmo tempo</strong> pois √© poss√≠vel ter uma fun√ß√£o sendo executada em cada n√∫cleo da CPU, por exemplo, ou at√© mesmo em CPUs diferentes.</p>

<h3 id="multithreading">Multithreading</h3>

<p>Uma das principais formas de atingir a programa√ß√£o paralela √© criando <em>Threads</em> (n√£o, n√£o √© o clone do Twitter que a Meta criou hahaha). Uma <em>thread</em> √© uma linha de execu√ß√£o de um programa, que pode ser executada em um n√∫cleo da sua CPU (seu processador). Sendo assim, se eu crio m√∫ltiplas threads, eu posso executar fun√ß√µes ao mesmo tempo em n√∫cleos diferentes do meu processador.</p>

<p>Cada linguagem pode (ou n√£o) fornecer uma forma de voc√™ criar <em>threads</em>. Em PHP, por exemplo, voc√™ pode usar a <a href="/2022-02-13-extensoes-php/">extens√£o</a> parallel para atingir esse objetivo. A seguir h√° um exemplo de como ter uma <em>thread</em> adicional em seu programa para executar tarefas em paralelo:</p>

<pre><code class="php">&lt;?php

use function \parallel\run;

run(function(){
    echo "Esse c√≥digo √© executado em uma thread separada" . PHP_EOL;
});

echo "J√° esse c√≥digo √© executado na thread principal" . PHP_EOL;
</code></pre>

<h3 id="multiprocessing">Multiprocessing</h3>

<p>Outra forma muito comum de atingir a programa√ß√£o paralela √© a cria√ß√£o de processos ao inv√©s de <em>threads</em>. Um processo √© basicamente um programa em execu√ß√£o no seu sistema operacional. Todo processo possui pelo menos uma <em>thread</em>. Ao criar um novo processo, como h√° pelo menos uma <em>thread</em> criada tamb√©m, se torna poss√≠vel a execu√ß√£o paralela novamente, por√©m h√° algumas diferen√ßas importantes.</p>

<p>Todo processo no sistema operacional possui um endere√ßo de mem√≥ria separado. Ao criar <em>threads</em>, esse endere√ßo de mem√≥ria √© compartilhado (j√° que as <em>threads</em> fazem parte do mesmo processo), logo, compartilhar dados entre threads √© uma tarefa f√°cil. Agora, ao criar um novo processo, um novo endere√ßo de mem√≥ria √© separado. Compartilhar mem√≥ria entre processos √© uma tarefa mais trabalhosa.</p>

<p>Para criar um novo processo, h√° uma fun√ß√£o em <code>C</code> chamada <code>fork</code>, que clona o processo atual e continua a execu√ß√£o no processo filho a partir da linha seguinte. Exemplo.:</p>

<pre><code class="c">#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;

int main()
{
    printf("At√© aqui, apenas o processo 'pai' √© executado\n");
    fork();

    printf("Essa linha ser√° executada 2 vezes. Uma pelo processo pai e outra pelo processo filho\n");

    return 0;
}
</code></pre>

<h2 id="programa%C3%A7%C3%A3o-concorrente">Programa√ß√£o concorrente</h2>

<p>Agora que entendemos (mesmo que por alto) os conceitos de programa√ß√£o ass√≠ncrona e programa√ß√£o paralela, vamos ao termo mais "dif√≠cil" de definir: programa√ß√£o concorrente.</p>

<p>O termo programa√ß√£o concorrente possui "problemas" em sua defini√ß√£o porque h√° v√°rios autores que usam essas palavras para definir coisas bem diferentes. Uma das defini√ß√µes poss√≠veis, inclusive, √© que programa√ß√£o concorrente √© o conceito explicado no texto de programa√ß√£o ass√≠ncrona na comunica√ß√£o em rede, ou seja, I/O n√£o bloqueante.</p>

<p>Outros autores definem programa√ß√£o concorrente como qualquer t√©cnica de programa√ß√£o que leva √† concorr√™ncia entre recursos. Por exemplo, se voc√™ possui duas fun√ß√µes paralelas que acessam o mesmo arquivo e por isso ambas n√£o podem ser executadas simultaneamente, as t√©cnicas de programa√ß√£o concorrente (como <em>mutex</em>) s√£o o que permitem a execu√ß√£o do programa sem erros.</p>

<p>H√° ainda outros autores que usam programa√ß√£o concorrente como sin√¥nimo de programa√ß√£o paralela, j√° que diferentes <em>threads</em> ou processos est√£o concorrendo pelo processamento da CPU.</p>

<p>Quem j√° me acompanha h√° algum tempo sabe que eu sou uma pessoa pr√°tica e pragm√°tica, ent√£o para mim √© muito simples: sempre que algu√©m se refere a programa√ß√£o concorrente, se pelo contexto n√£o √© √≥bvio o que ela quer dizer, eu pergunto e pe√ßo um exemplo. Dessa forma consigo entender exatamente o que a pessoa quer dizer e posso prosseguir com a conversa.</p>

<h2 id="quando-usar-cada-uma%3F">Quando usar cada uma?</h2>

<p>Ent√£o, resumindo, quando o assunto √© realmente c√≥digo, n√≥s temos I/O n√£o bloqueante e programa√ß√£o paralela. Essas duas t√©cnicas permitem, de forma muito diferente, executar c√≥digo que pode aumentar a performance de nossa aplica√ß√£o, por exemplo. Ent√£o quando devo usar cada uma dessas t√©cnicas?</p>

<p>Acredito que pelo uso do termo I/O n√£o bloqueante, a resposta j√° tenha ficado clara. Sempre que a opera√ß√£o demorada envolver I/O, sua resposta estar√° na programa√ß√£o ass√≠ncrona. Com isso voc√™ consegue executar tarefas enquanto opera√ß√µes como chamadas de rede e leitura de arquivos est√£o sendo realizadas, mas sem o custo adicional de criar novas <em>threads</em> ou processos.</p>

<p>J√° a programa√ß√£o paralela √© usada quando voc√™ possui tarefas demoradas que demandam computa√ß√£o intensa e muito uso da CPU. C√°lculos matem√°ticos complexos, manipula√ß√µes de imagem e v√≠deo s√£o alguns exemplos onde programa√ß√£o paralela se faz necess√°ria.</p>

<p>No mundo <em>Web</em> √© muito mais comum voc√™ precisar de I/O n√£o bloqueante (ou programa√ß√£o ass√≠ncrona), por isso o <em>JavaScript</em> possui <em>Promises</em> nativamente e ferramentas como <em>ReactPHP</em> e <em>Swoole</em> existem no ecossistema PHP para trazerem implementa√ß√µes de <em>Event Loops</em>. J√° ao realizar o processamento ass√≠ncrono usando mensageria, suas tarefas de plano de fundo podem realizar processamentos pesados, onde talvez o uso de programa√ß√£o paralela possa ser vantajoso.</p>

<h2 id="refer%C3%AAncias">Refer√™ncias</h2>

<p>Durante o texto eu deixei alguns links que podem ajudar a entender alguns conceitos espec√≠ficos, mas quero deixar aqui mais duas refer√™ncias muito importantes. A seguir possui um dos primeiros v√≠deos que gravei para meu canal, explicando justamente a diferen√ßa entre os termos e quando n√≥s devemos usar cada uma dessas t√©cnicas:</p>

<p><lite-youtube videoid="zLfXPSeCkB8">
    <a href="https://youtube.com/watch?v=zLfXPSeCkB8" class="lty-playbtn" title="Reproduzir v√≠deo">
        <span class="lyt-visually-hidden">
            Programa√ß√£o ass√≠ncrona vs Programa√ß√£o paralela - Entenda a diferen√ßa
        </span>
    </a>
</lite-youtube></p>

<p>J√° no link a seguir eu deixo um <a href="https://tidd.ly/4d42Myb">cupom de 15% de desconto</a> para voc√™ assinar a Alura, plataforma onde h√° cursos completos (alguns comigo, inclusive) sobre programa√ß√£o paralela e programa√ß√£o ass√≠ncrona (dentre v√°rios outros assuntos de tecnologia).</p>

<h2 id="conclus%C3%A3o">Conclus√£o</h2>

<p>Programa√ß√£o paralela √© o que permite a execu√ß√£o simult√¢nea de mais de uma por√ß√£o de c√≥digo, podendo cada uma estar em um n√∫cleo da CPU, por exemplo. Essa t√©cnica √© muito √∫til quando temos tarefas intensas em processamento como c√°lculos complexos e manipula√ß√£o de imagens. J√° a programa√ß√£o ass√≠ncrona √© extremamente importante ao lidar com entrada e sa√≠da (I/O), j√° que permite que executemos tarefas sem bloquear a CPU esperando por respostas de I/O. Programa√ß√£o concorrente √© um termo que pode ser definido de diversas formas, onde cada autor descreve essa ideia de forma diferente, indo desde um sin√¥nimo para programa√ß√£o ass√≠ncrona at√© t√©cnicas de compartilhamento de recursos em programa√ß√£o paralela.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Cookies e seguran√ßa]]></title>
            <link href="https://dias.dev/2022-09-27-cookies-e-seguranca/"/>
            <updated>2022-09-27T00:00:00+00:00</updated>
            <id>https://dias.dev/2022-09-27-cookies-e-seguranca/</id>
            <content type="html"><![CDATA[<p><em>Cookies</em> s√£o amplamente utilizados para armazenar informa√ß√µes em nossos navegadores e muitas vezes n√≥s negligenciamos a seguran√ßa dessas informa√ß√µes. Cookies podem conter dados sens√≠veis como sua informa√ß√£o de sess√£o, por exemplo, por isso devemos nos preocupar com seu armazenamento.</p>

<h2 id="o-que-s%C3%A3o-_cookies_%3F">O que s√£o <em>cookies</em>?</h2>

<p>Um <em>cookie</em> √©, basicamente, uma informa√ß√£o de texto enviada pelo servidor de uma aplica√ß√£o web e salva no navegador. Ap√≥s salvar essa informa√ß√£o, o navegador reenvia os <em>cookies</em> em todas as requisi√ß√µes realizadas. <em>Cookies</em> s√£o enviados atrav√©s de cabe√ßalhos HTTP tanto do servidor para o cliente quanto do cliente para o servidor.</p>

<p>Se voc√™ n√£o est√° familiarizado com o protocolo HTTP, pode conferir este v√≠deo antes de continuar a leitura:</p>

<p><lite-youtube videoid="B2IWlnJ_dt0" style="background-image: url('https://i.ytimg.com/vi/B2IWlnJ_dt0/hqdefault.jpg');">
    <a href="https://youtube.com/watch?v=B2IWlnJ_dt0" class="lty-playbtn" title="Reproduzir v√≠deo">
        <span class="lyt-visually-hidden">Reproduzir v√≠deo: Como funciona a Web? - A internet por baixo dos panos | Dias de Dev</span>
    </a>
</lite-youtube></p>

<p>Dessa forma um servidor pode, por exemplo, ao receber as credenciais do usu√°rio, gerar um ID √∫nico e enviar atrav√©s de cookies. A partir disso, todas as requisi√ß√µes futuras que o navegador fizer conter√£o essa identifica√ß√£o do usu√°rio. Assim funciona o mecanismo de sess√µes que nos permite permanecer logados em sites.</p>

<h3 id="onde-ficam-os-_cookies_">Onde ficam os <em>cookies</em></h3>

<p>Cada navegador pode salvar seus <em>cookies</em> como preferir. Seja em um banco de dados embutido, em arquivos de texto encriptados no sistema operacional, etc. Mas para visualizar os cookies de uma aplica√ß√£o que estamos acessando, podemos utilizar as ferramentas de desenvolvedor.</p>

<p>Aperte F12, v√° at√© a aba "Aplicativo" (ou "Application") e l√° voc√™ ver√°, no menu lateral, a parte de <em>Cookies</em>. Repare que eles s√£o separados por dom√≠nio.</p>

<p>Para entender essa separa√ß√£o por dom√≠nio, vamos imaginar o seguinte cen√°rio: sua aplica√ß√£o, hospedada no dom√≠nio X, envia um <em>cookie</em> de identifica√ß√£o de sess√£o. No c√≥digo do seu app h√° chamadas para um servidor que configura relat√≥rios de acesso ao site. Esse servidor est√° em outro local, no dom√≠nio Y. Sendo assim, voc√™ ver√° <em>cookies</em> dos dom√≠nios X e Y ao acessar essa ferramenta de desenvolvedores.</p>

<h3 id="o-que-_cookies_-armazenam">O que <em>Cookies</em> armazenam</h3>

<p>Entendido o funcionamento b√°sico e onde encontr√°-los, vamos analisar quais informa√ß√µes um <em>cookie</em> pode conter. Todo cookie possui, necessariamente, um nome e um valor. O nome √©, como voc√™ deve imaginar, a forma que usamos para identificar a informa√ß√£o que esse cookie carrega em seu valor. Um <em>cookie</em> de sess√£o, por exemplo, geralmente possui a palavra <em>session</em> em seu nome enquanto seu valor ser√° o ID da sess√£o.</p>

<p>Al√©m desses atributos "b√°sicos", cookies podem possuir par√¢metros extra. Alguns deles s√£o:</p>

<ul>
<li><code>Expires</code>: Define a data e hora de expira√ß√£o do cookie. Se esse par√¢metro n√£o for definido, o <em>cookie</em> ser√° considerado como "<em>cookie</em> de sess√£o" e ir√° expirar quando o navegador for fechado.</li>
<li><code>Max-Age</code>: Similar ao <code>Expires</code>, tamb√©m define quando um <em>cookie</em> vai expirar, mas em segundos. Se os 2 par√¢metros forem informados, <code>Max-Age</code> possui prioridade.</li>
<li><code>Domain</code>: Define para qual host o <em>cookie</em> ser√° enviado pelo navegador. Se esse par√¢metro n√£o for definido, o <em>cookie</em> ser√° enviado somente para o host da URL atual, n√£o incluindo sub-dom√≠nios. Se um valor como <code>example.com</code> for definido, o <em>cookie</em> ser√° enviado nas requisi√ß√µes para <code>example.com</code> e todos os seus sub-dom√≠nios.</li>
<li><code>Path</code>: Indica qual caminho deve existir na URL para que o <em>cookie</em> seja enviado pelo navegador. Se o valor for <code>/docs</code>, o <em>cookie</em> ser√° enviado para URLs como <code>/docs</code>, <code>/docs/</code>, <code>/docs/web</code>, etc, mas n√£o ser√° enviado para URLs como <code>/</code>, <code>/documentos</code>, <code>/pt-br/docs</code>, etc.</li>
<li><code>Secure</code>: Se esse par√¢metro for definido, o <em>cookie</em> s√≥ ser√° enviado em requisi√ß√µes HTTPS.</li>
<li><code>HttpOnly</code>: Proibe o acesso ao <em>cookie</em> em quest√£o atrav√©s de JavaScript com <code>document.cookie</code>.</li>
<li><code>SameSite</code>: Com os poss√≠veis valores sendo <code>Strict</code>, <code>Lax</code> e <code>None</code>, controla se o <em>cookie</em> pode ser enviado em requisi√ß√µes feitas a partir de outros sites para o do dom√≠nio do <em>cookie</em>.

<ul>
<li><code>Strict</code>: Apenas <em>cookies</em> para o endere√ßo da URL que est√° sendo acessada s√£o enviados. Isso faz com que a requisi√ß√£o inicial para um site n√£o contenha os <em>cookies</em> com esse par√¢metro, j√° que est√£o vindo de outro dom√≠nio.</li>
<li><code>Lax</code> (op√ß√£o padr√£o): Semelhante ao <code>Strict</code>, mas permite o envio dos <em>cookies</em> na requisi√ß√£o inicial. Isso permite, por exemplo, manter o usu√°rio logado ao chegar no sistema atrav√©s de um link externo.</li>
<li><code>None</code>: Quer dizer que os <em>cookies</em> ser√£o enviados mesmo se a requisi√ß√£o estiver vindo de outro endere√ßo. Para usar essa op√ß√£o, as vers√µes mais recentes dos navegadores exigem que o par√¢metro <code>Secure</code> seja definido.</li>
</ul></li>
</ul>

<h4 id="exemplos-de-defini%C3%A7%C3%B5es-de-_cookies_">Exemplos de defini√ß√µes de <em>cookies</em></h4>

<p>Para enviar um <em>cookie</em> de sess√£o, o seguinte cabe√ßalho pode ser enviado:</p>

<pre><code class="http">Set-Cookie: sessionId=123456
</code></pre>

<p>J√° para um <em>cookie</em> permanente com dura√ß√£o de 1 semana:</p>

<pre><code class="http">Set-Cookie: nome=valor; Max-Age=604800
</code></pre>

<h2 id="_cookies_-e-seguran%C3%A7a"><em>Cookies</em> e Seguran√ßa</h2>

<p>J√° entendemos o que s√£o, como funcionam e os par√¢metros de <em>cookies</em>. Agora vamos finalmente ao t√≥pico em quest√£o: <em>cookies</em> e seguran√ßa.</p>

<h3 id="_cookies_-e-xss"><em>Cookies</em> e XSS</h3>

<p>Como j√° foi citado, sess√µes s√£o um uso muito comum para <em>cookies</em>. As linguagens de back-end, inclusive, j√° lidam com esse detalhe de forma transparente na maioria das vezes. Agora imagine o seguinte cen√°rio: atrav√©s de um ataque de <a href="https://youtube.com/watch?v=lntsVxPZibw">XSS</a> um usu√°rio malicioso consegue acesso ao seu <em>cookie</em> de sess√£o. Com isso ele conseguir√° se passar por voc√™ e o estrago pode ser enorme.</p>

<p>Para prevenir que ataques XSS consigam acessar seus <em>cookies</em> sens√≠veis (como o de sess√£o), podemos marc√°-lo como <code>HttpOnly</code>. Dessa forma, c√≥digo JavaScript nenhum ter√° acesso ao mesmo.</p>

<p>Claro que um sistema com vulnerabilidade a <em>XSS</em> est√° em GRANDES riscos, mas para evitar <a href="https://owasp.org/www-community/attacks/Session_hijacking_attack"><em>session hijacking</em></a>, tornar o <em>cookie</em> <code>HttpOnly</code> j√° √© um grande passo.</p>

<p>Como j√° foi explicado anteriormente, o par√¢metro <code>HttpOnly</code> impede que o <em>cookie</em> em quest√£o seja acessado via <code>document.cookie</code>. Mas caso voc√™ precise realizar requisi√ß√µes via JavaScript, saiba que a fun√ß√£o <code>fetch</code> vai conseguir enviar os mesmos sem problema. :-D</p>

<p>Cada linguagem back-end pode fornecer suas facilidades para definir o <em>cookie</em> de sess√£o como <code>HttpOnly</code>. No PHP, por exemplo, al√©m da fun√ß√£o <code>session_set_cookie_params</code>, h√° configura√ß√µes como a <code>session.cookie_httponly</code>. O cabe√ßalho de um <em>cookie</em> <code>HttpOnly</code> seria parecido com:</p>

<pre><code class="http">Set-Cookie: sessionId=123456; HttpOnly
</code></pre>

<h3 id="_cookies_-e-csrf"><em>Cookies</em> e CSRF</h3>

<p>Um ataque <em>CSRF</em> (<em>Cross-Site Request Forgery</em>) permite que um atacante se passe por outro usu√°rio tabm√©m, enviando requisi√ß√µes de um site para outro.</p>

<p>Para exemplificar: imagine que meu site dias.dev seja malicioso. Nele eu vou colocar a seguinte tag <code>img</code>:</p>

<pre><code class="html">&lt;img src="https://example.com/index.php?action=delete&amp;id=123" /&gt;
</code></pre>

<p>Se voc√™, acessando meu site, estiver logado em <code>example.com</code> (com o <em>cookie</em> armazenado e o par√¢metro <code>SameSite=None</code>), essa requisi√ß√£o vai ser feita com sucesso para uma a√ß√£o de remo√ß√£o de um dado e voc√™ nem vai perceber. S√≥ haver√° uma "imagem quebrada" no site.</p>

<p>Para impedir que a partir de um site, <em>cookies</em> sejam enviados para outro, podemos (dentre outras coisas), definir a pol√≠tica de <code>SameSite</code> como <code>Lax</code> (o que via de regra √© o padr√£o) ou <code>Strict</code>:</p>

<pre><code class="http">Set-Cookie: sessionId=123456; HttpOnly; SameSite=Lax
</code></pre>

<p>Agora nosso <em>cookie</em> al√©m de n√£o ser mais acess√≠vel via JavaScript, s√≥ √© enviado em requisi√ß√µes realizadas a partir do nosso pr√≥prio site. Talvez voc√™ esteja se perguntando: se <code>Lax</code> j√° √© o padr√£o, por que me preocupar? Acontece que algumas linguagens ou frameworks back-end podem alterar esse padr√£o por diversos motivos. Por isso √© importante saber como usar esse par√¢metro.</p>

<h3 id="_cookies_-e-ataques-_man-in-the-middle_"><em>Cookies</em> e ataques <em>Man in the middle</em></h3>

<p>Outra forma de realizar <a href="https://owasp.org/www-community/attacks/Session_hijacking_attack"><em>session hijacking</em></a> seria um ataque do tipo <em>Man in the middle</em>, onde um atacante observa as requisi√ß√µes realizadas a partir do seu computador para o servidor. Se a requisi√ß√£o n√£o for criptografada, ou seja, n√£o usar HTTPS, o atacante ter√° acesso a todos os <em>cookies</em>.</p>

<p>Para impedir que um <em>cookie</em> seja enviado em requisi√ß√µes n√£o criptografadas, basta definir o par√¢metro <code>Secure</code>. Quando uma requisi√ß√£o sem HTTPS acontecer, esse <em>cookie</em> n√£o ser√° enviado. Com isso, nosso <code>header</code> ficaria:</p>

<pre><code class="http">Set-Cookie: sessionId=123456; HttpOnly; SameSite=Lax; Secure
</code></pre>

<h2 id="conclus%C3%A3o">Conclus√£o</h2>

<p>Repare que o uso correto dos par√¢metros dos <em>cookies</em> j√° nos protege de diversos ataques. Obviamente apenas cuidar dos nossos <em>cookies</em> n√£o √© o suficiente para ter um sistema verdadeiramente seguro. Precisamos nos atentar a diversos outros fatores e poss√≠veis vulnerabilidades. Al√©m disso, <em>cookies</em> de sess√£o n√£o s√£o os √∫nicos a serem cuidados. <em>Tokens</em> geralmente s√£o armazenados como <em>cookies</em> tamb√©m e todos esses cuidados devem ser tomados.</p>

<p>Se seguran√ßa √© um assunto que te interessa, recomendo essa <em>playlist</em> com alguns v√≠deos b√°sicos sobre o assunto: <a href="https://youtube.com/playlist?list=PL3j2sfzg3FPuOOt13tOcNTx6hCFYcQls9">https://youtube.com/playlist?list=PL3j2sfzg3FPuOOt13tOcNTx6hCFYcQls9</a></p>

<p>Se quiser se aprofundar, na Alura h√° diversos cursos e forma√ß√µes sobre o tema de seguran√ßa. Aqui est√° um <a href="https://tidd.ly/4d42Myb">cupom de desconto</a> para assinar a plataforma.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Paralelizar testes automatizados]]></title>
            <link href="https://dias.dev/2022-09-16-paralelizar-testes-automatizados/"/>
            <updated>2022-09-16T00:00:00+00:00</updated>
            <id>https://dias.dev/2022-09-16-paralelizar-testes-automatizados/</id>
            <content type="html"><![CDATA[<p>Testes automatizados podem levar um certo tempo para serem executados, principalmente se forem rodados um a um. Executar mais de um teste por vez pode ser uma boa alternativa para agilizar sua <em>pipeline</em>.</p>

<h2 id="testes-automatizados">Testes automatizados</h2>

<p>A cria√ß√£o e execu√ß√£o de testes automatizados traz in√∫meras vantagens e isso por si s√≥ poderia ser assunto para outro post completo. Mas um ponto que muitas vezes negligenciamos √© o tempo que a execu√ß√£o dos testes pode tomar em nossa <em>pipeline</em> de <em>build</em>.</p>

<p>Uma das etapas mais importantes em um ambiente de CI/CD, por exemplo, √© a execu√ß√£o dos testes. E sabemos que ter um processo demorado aqui pode at√© inviabilizar a ado√ß√£o de pr√°ticas de integra√ß√£o cont√≠nua.</p>

<p>√â muito comum que ao executar a nossa su√≠te de testes, cada cen√°rio seja executado de forma isolada, um por vez. Por√©m, atualmente √© praticamente regra que os nossos computadores possuam CPUs com capacidade de executar mais de um processo por vez, sendo assim, por que n√£o executar mais de um teste por vez?</p>

<h2 id="paraleliza%C3%A7%C3%A3o-de-testes">Paraleliza√ß√£o de testes</h2>

<p>Paralelismo √© um assunto bastante complexo, mas a ideia de paralelizar uma su√≠te de testes √©, na verdade, bem simples: executar mais de um caso de teste por vez, em processos separados.</p>

<p>Um ponto que deve ser considerado √© a independ√™ncia dos testes. Cada teste deve ser completamente independente e n√£o pode usar o resultado ou a√ß√µes de testes anteriores. Uma forma aumentar a seguran√ßa de que os seus testes atualmente s√£o independentes √© rod√°-los fora de ordem. Dessa forma, se algum teste dependia do anterior, por exemplo, ao execut√°-los em uma ordem aleat√≥ria ele passar√° a falhar.</p>

<h2 id="ferramentas">Ferramentas</h2>

<p>Tendo entendido a ideia de rodar mais de um teste por vez e que para isso os testes precisam ser independentes, como podemos efetivamente atingir o paralelismo nos nossos testes?</p>

<p>Cada ecossistema ter√° a sua solu√ß√£o. Em PHP, por exemplo, podemos usar o <a href="https://github.com/paratestphp/paratest">Paratest</a>. N√£o √© necess√°ria nenhuma configura√ß√£o. Se voc√™ tem os seus testes rodando com PHPUnit, basta executar o comando <code>paratest</code> ao inv√©s de <code>phpunit</code>, mais nada. J√° em JS, cada framework de testes possui uma abordagem diferente. O Jest j√° executa os testes de arquivos diferentes de forma paralela por padr√£o. Em Java, a sua su√≠te JUnit pode usar uma ferramenta chamada Surefire. MSTest (para C#) na sua vers√£o 2 permite paralelizar testes tamb√©m. ExUnit (para Elixir) j√° executa os testes de cada m√≥dulo de forma paralela. Testes em Rust tamb√©m s√£o executados em paralelo por padr√£o.</p>

<h2 id="conclus%C3%A3o">Conclus√£o</h2>

<p>A vantagem de paralelizar testes √© bastante clara e a desvantagem √© somente a necessidade dos testes serem isolados, o que j√° deveria ser um padr√£o independente da forma de execu√ß√£o.</p>

<p>Cada ecossistema e ferramenta resolve esse problema de uma maneira diferente, mas todos eles possuem alguma solu√ß√£o. Vale a pesquisa para saber mais sobre a linguagem com a qual voc√™ trabalha.</p>

<p>Se n√£o estiver familiarizado com conceitos de testes, sugiro assistir <a href="https://youtube.com/playlist?list=PL3j2sfzg3FPsPiaDUmDDKNvco49YMdj8f">esta playlist</a> de testes automatizados. E se quiser se aprofundar em testes e programa√ß√£o em geral, aqui tem um <a href="https://tidd.ly/4d42Myb">cupom de desconto</a> para voc√™ assinar Alura.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Charsets e Encodings: Como strings funcionam]]></title>
            <link href="https://dias.dev/2021-08-24-charsets-e-encodings-como-strings-funcionam/"/>
            <updated>2021-08-24T00:00:00+00:00</updated>
            <id>https://dias.dev/2021-08-24-charsets-e-encodings-como-strings-funcionam/</id>
            <content type="html"><![CDATA[<p>√â de conhecimento geral que computadores trabalham com n√∫meros, especificamente n√∫meros na base bin√°ria. Sabendo disso, como podemos representar o texto que eu estou escrevendo apenas com conjuntos de 0s e 1s? Como o computador, trabalhando apenas com n√∫meros, consegue lidar com textos?</p>

<h2 id="tabelas-de-caracteres-charsets">Tabelas de caracteres (Charsets)</h2>

<p>Para realizar essa tarefa, tabelas de caracteres (<em>charsets</em>) s√£o utilizadas. Com essas tabelas, algum caractere pode ser mapeado para algum n√∫mero. Esse n√∫mero que ser√° armazenado e manipulado pelos programas que lidam com textos. Mas como esse mapeamento √© feito?</p>

<h2 id="ascii">ASCII</h2>

<p>Uma das tabelas de caracteres mais antigas que se tem conhecimento √© a ASCII (<em>American Standard Code for Information Interchange</em>). Esta tabela cont√©m todos os n√∫meros e os caracteres usados pelo idioma ingl√™s, onde cada um desses caracteres √© mapeado para um n√∫mero e esse n√∫mero √© convertido diretamente para a base bin√°ria, sendo uma representa√ß√£o bastante simples. Os n√∫meros v√£o de 0 a 127, ou seja, qualquer caractere da tabela ASCII pode ser representado em at√© 7 <em>bits</em>, o que √© menos que 1 <em>byte</em> (1 <em>byte</em> = 8 <em>bits</em>).</p>

<p><img src="https://raw.githubusercontent.com/wiki/tomgibara/ascii-table/tables/ascii-table-1.1.png" alt="Tabela ASCII" /></p>

<p>Isso funcionava muito bem para textos que usavam ingl√™s como idioma (ou algum idioma com o mesmo conjunto de caracteres). Por√©m, diversos outros idiomas possuem caracteres que n√£o est√£o representados nesta tabela. Caracteres acentuados, por exemplo, n√£o est√£o na tabela ASCII. Como representar textos em portugu√™s, por exemplo?</p>

<h2 id="extended-ascii">Extended ASCII</h2>

<p>Como pudemos ver na imagem da tabela ASCII, os valores v√£o de 0 a 127. Isso pode ser representado com 7 <em>bits</em>.</p>

<p>Como foi citado no cap√≠tulo anterior, todos os caracteres da tabela ASCII podem ser representados com at√© 7 <em>bits</em>. Sendo assim, temos 1 bit "sobrando" para cada caractere completar 1 <em>byte</em>.</p>

<p>Pensando nisso, surgiram diversas outras tabelas de caracteres fazendo uso deste bit adicional para representar outros caracteres. Desta forma √© criada a tabela ASCII estendida: <em>Extended ASCII</em> ou <em>EASCII</em></p>

<p><img src="https://files.passeidireto.com/0b57a2e8-7fae-4e06-ac73-a7004f09a741/0b57a2e8-7fae-4e06-ac73-a7004f09a741.gif" alt="Tabela ASCII Estendida" /></p>

<p>Ao mesmo tempo, outros idiomas que possuem seu alfabeto sem nenhuma semelhan√ßa com o ingl√™s (como japon√™s ou russo) utilizavam tabelas completamente diferentes para representar seus caracteres.</p>

<h2 id="ascens%C3%A3o-da-web">Ascens√£o da Web</h2>

<p>O uso de tabelas diferentes funcionou muito bem enquanto os arquivos ficavam apenas em um computador ou eram compartilhados em redes locais (como de universidades). Por√©m, conforme a Web nasceu e cresceu, o compartilhamento de arquivos se tornou uma tarefa trivial. Como eu, no Brasil, poderia enviar um documento para o Egito, usando o alfabeto grego? Essa tarefa era simplesmente imposs√≠vel.</p>

<h2 id="unicode">Unicode</h2>

<p>Pensando em ter uma forma unificada de representar todos os caracteres conhecidos no mundo, em 1991 foi criada o <em>Unicode Consortium</em>. Essa iniciativa trabalha e tem encontros frequentes para garantir que h√° suporte a todos os idiomas e caracteres conhecidos pela humanidade, incluindo <em>emojis</em>. Parece um trabalho enorme e realmente √©.</p>

<p><em>Emojis</em>, por exemplo, foram sugeridos √† iniciativa em meados de 2000, por√©m apenas ap√≥s 2007 eles foram incorporados ao <em>Unicode</em>.</p>

<p>Ent√£o, se formos supersimplificar (muito), podemos dizer que o <em>Unicode Consortium</em> criou um grande <em>charset</em>, ou seja, uma grande tabela de caracteres. Por√©m, essa "tabela" √© gigante! Como representar estes n√∫meros enormes de forma eficiente?</p>

<h2 id="encodings">Encodings</h2>

<p>Aqui entram os encodings. O n√∫mero <strong>128 512</strong> (em hexadecimal, 1F600) representa o emoji de sorriso (üòÄ). Esse n√∫mero <strong>128 512</strong> pode ser representado de v√°rias formas dependendo do encoding selecionado para tal arquivo. Alguns encodings compat√≠veis com <em>Unicode</em> s√£o:
- UTF-8
- UTF-16
- UTF-32</p>

<p>Inicialmente eu acreditava que a diferen√ßa entre eles era apenas o n√∫mero de <em>bits</em> utilizado, sendo assim UTF-8 poderia representar menos caracteres j√° que usa menos bits. N√£o √© o caso. Todos eles podem consumir um n√∫mero vari√°vel de <em>bits</em> os organizando de forma diferente. Cada encoding pode ser mais vantajoso dependendo do cen√°rio. Para representar textos (como esse que escrevo) e mensagens transferidas pela rede, UTF-8 √© o mais recomendado e utilizado, visto que sua organiza√ß√£o permite que os caracteres mais comuns ocupem o menor espa√ßo poss√≠vel. J√° UTF-16 ocupa menos espa√ßo representando caracteres com n√∫meros maiores na "tabela" unicode.</p>

<h2 id="conclus%C3%A3o">Conclus√£o</h2>

<p>√â comum utilizarmos fun√ß√µes de convers√£o de encoding sem entender bem o que estamos fazendo e muito provavelmente todo mundo que desenvolve <em>software</em> para a <em>web</em> j√° se deparou com o seguinte problema:</p>

<p><img src="https://i.stack.imgur.com/590Tg.png" alt="Texto com caracteres mal codificados" /></p>

<p>Entender como funcionam charsets e encodings de texto al√©m de ser interessante e divertido, pode nos ajudar a compreender melhor problemas deste tipo e principalmente encontrar a solu√ß√£o de forma mais simples.</p>

<p>Creio que seja seguro afirmar que a grande maioria dos textos que tratamos como desenvolvedores utiliza UTF-8 como encoding e neste artigo n√≥s entendemos o motivo disso e como o tratamento de textos evoluiu at√© chegar a esse ponto.</p>

<p>Se voc√™ quiser aprender mais sobre esse assunto, pode considerar assinar a Alura. L√° existem treinamentos que tratam sobre charsets, encoding, manipula√ß√£o de <em>strings</em> e muito mais. Caso pretenda estudar na Alura, <a href="https://tidd.ly/4d42Myb">neste link</a> voc√™ tem um desconto de 15%.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Requisi√ß√µes HTTP paralelas com PHP]]></title>
            <link href="https://dias.dev/2021-03-13-requisicoes-http-paralelas-com-php/"/>
            <updated>2021-03-13T00:00:00+00:00</updated>
            <id>https://dias.dev/2021-03-13-requisicoes-http-paralelas-com-php/</id>
            <content type="html"><![CDATA[<h2 id="i%2Fo-n%C3%A3o-bloqueante-programa%C3%A7%C3%A3o-ass%C3%ADncrona">I/O n√£o bloqueante (programa√ß√£o ass√≠ncrona)</h2>

<p>Em um <a href="/2020-09-16-php-assincrono-de-forma-nativa/">post anterior</a> falei bastante sobre como o PHP trabalha por baixo dos panos de forma nativa com I/O n√£o
bloqueante, e consequentemente com programa√ß√£o ass√≠ncrona. Usando os conhecimentos daquele post com conhecimentos de
<em>sockets</em> e HTTP seria poss√≠vel realizarmos chamadas HTTP ass√≠ncronas e process√°-las conforme elas fossem recebidas.
Por√©m √© bastante comum podermos nos dar ao luxo de processar todas as respostas HTTP depois de prontas, desde que todas
as requisi√ß√µes tenham sido feitas de forma concorrente.</p>

<h2 id="curl">cURL</h2>

<p>Como realizar requisi√ß√µes HTTP usando <em>sockets</em> pode se tornar uma tarefa muito complicada, principalmente em cen√°rios
onde precisamos enviar dados (requisi√ß√µes POST, por exemplo), cURL √© uma alternativa muito interessante. Essa biblioteca
√© pensada especialmente em realizar requisi√ß√µes pela rede e possui diversos facilitadores.</p>

<h2 id="o-problema">O problema</h2>

<p>Entendido o contexto das tecnologias que temos dispon√≠veis, vamos falar do problema que temos em m√£os. Existe uma API
que fornece informa√ß√µes sobre o universo <em>Star Wars</em>. Essa API √© gratuita e vai servir perfeitamente para nosso exemplo.</p>

<p>O que queremos fazer √© buscar a lista de filmes (atrav√©s da url https://swapi.dev/api/films/) e para cada filme buscar
os seus detalhes em outra URL (https://swapi.dev/api/films/:id/).</p>

<h3 id="solu%C3%A7%C3%A3o-bloqueante">Solu√ß√£o bloqueante</h3>

<p>Usando o <code>cURL</code> de forma ‚Äúpadr√£o‚Äù, ou seja, bloqueante, podemos atingir este objetivo com o seguinte c√≥digo:</p>

<pre><code class="php">&lt;?php

$handle = curl_init('https://swapi.dev/api/films/');
// informa que n√£o queremos exibir a resposta diretamente, mas sim pegar seu retorno
curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);
$response = curl_exec($handle);
curl_close($handle);

$data = json_decode($response, true);
$movies = $data['results'];

foreach ($movies as $movie) {
    // Alterando o protocolo para https
    $url = str_replace('http:', 'https:', $movie['url']);
    $handle = curl_init($url);
    curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);
    $response = curl_exec($handle);

    $movieData = json_decode($response, true);
    var_dump($movieData);
}
</code></pre>

<p>O problema desta abordagem √© que cada requisi√ß√£o para os detalhes do filme vai travar a execu√ß√£o do PHP, fazendo
com que a pr√≥xima requisi√ß√£o s√≥ seja iniciada quando a anterior for finalizada.</p>

<h3 id="solu%C3%A7%C3%A3o-n%C3%A3o-bloqueante">Solu√ß√£o n√£o bloqueante</h3>

<p>Para informarmos um determinado n√∫mero de requisi√ß√µes e realizarmos todas de uma vez, podemos usar o <code>curl_multi_init</code>.</p>

<pre><code class="php">&lt;?php

// Primeira requisi√ß√£o como no c√≥digo anterior
$movies = $data['results'];

// Inicializa o handle de m√∫ltiplas conex√µes
$multiHandle = curl_multi_init();

// Armazena cada handle individual em um array
// al√©m de adicion√°-los ao $multiHandle
$handles = [];
foreach ($movies as $i =&gt; $movie) {
    $url = str_replace('http:', 'https:', $movie['url']);
    $handles[$i] = curl_init($url);
    curl_setopt($handles[$i], CURLOPT_RETURNTRANSFER, true);
    curl_multi_add_handle($multiHandle, $handles[$i]);
}
</code></pre>

<p>Assim n√≥s temos diversos <em>handles</em> do <code>cURL</code> adicionados a um gerenciador de m√∫ltiplas requisi√ß√µes. Quando executarmos o
<code>$multiHandle</code>, todas as requisi√ß√µes ser√£o feitas em paralelo. Maravilha, n√£o √© mesmo?</p>

<p>Infelizmente n√£o √© t√£o simples assim. N√£o basta fazer um <code>curl_multi_exec</code> e receber um array de respostas. A fun√ß√£o
<code>curl_multi_exec</code> inicia as requisi√ß√µes, por√©m n√£o bloqueia o c√≥digo, ou seja, n√≥s precisamos ficar em um <em>loop</em> verificando
se todas as requisi√ß√µes j√° foram feitas. Algo como:</p>

<pre><code class="php">do {
    $result = curl_multi_exec($multiHandle, $numberOfMissingHandles);
} while ($numberOfMissingHandles &gt; 0);

// Processar respostas
</code></pre>

<p>A vari√°vel <code>$numberOfMissingHandles</code> √© passada por refer√™ncia e √© preenchida com o n√∫mero dos <em>handles</em> que faltam ser
resolvidos. Em outras palavras, enquanto esse valor n√£o chegar a 0, temos requisi√ß√µes sendo processadas.</p>

<p>Depois de sair desse <em>loop</em>, podemos recuperar as respostas de todas as requisi√ß√µes, ent√£o voltamos para a tarefa f√°cil:</p>

<pre><code class="php">// Por isso armazenamos o array de $handles
foreach ($handles as $handle) {
    // Usamos curl_multi_getcontent para recuperar a resposta
    // de cada um dos handles que foi executado pelo curl_multi_exec
    $response = curl_multi_getcontent($handle);
    curl_multi_remove_handle($multiHandle, $handle);
    curl_close($handle);

    $movieData = json_decode($response, true);
    var_dump($movieData);
}
</code></pre>

<p>Com isso n√≥s atingimos o objetivo de realizar todas as requisi√ß√µes de uma vez e s√≥ depois ler as respostas.</p>

<h3 id="mal-uso-de-recursos">Mal uso de recursos</h3>

<p>O problema da nossa abordagem √© que a fun√ß√£o <code>curl_multi_exec</code> retorna imediatamente, sem esperar por nenhuma atividade
nos <em>handles</em>, ou seja, se as requisi√ß√µes forem demoradas ou houverem muitas requisi√ß√µes (ou ambos), esse <em>loop</em> vai ser
executado de forma muito r√°pida, por muito tempo. Isso vai fazer com que o uso de CPU v√° ao topo, atrasando inclusive o
processo de realizar requisi√ß√µes, afinal de contas o sistema operacional precisa destinar certos recursos para essa tarefa.</p>

<p>Para mitigar esse problema, podemos usar uma fun√ß√£o chamada <code>curl_multi_select</code>. Ela √© semelhante √† <code>stream_select</code> que
vimos no post sobre <a href="/2020-09-16-php-assincrono-de-forma-nativa/">PHP ass√≠ncrono</a>. Essa fun√ß√£o espera que alguma
atividade aconte√ßa nos handles que estamos utilizando. A diferen√ßa √© que ela n√£o recebe um array, mas sim o nosso
<code>$multiHandle</code>. Ent√£o tudo que temos de informa√ß√£o √© quantos <em>handles</em> possuem atividade no momento, mas n√£o quais deles.
Mas tudo bem, j√° que o nosso prop√≥sito √© ler todos apenas no final.</p>

<p>A fun√ß√£o <code>curl_multi_select</code> deve ser chamada ap√≥s o <code>curl_multi_exec</code>, j√° que √© essa que inicia as requisi√ß√µes efetivamente.
Ent√£o o nosso primeiro <em>loop</em> ficaria assim:</p>

<pre><code class="php">do {
    $result = curl_multi_exec($multiHandle, $numberOfMissingHandles);
    $descriptorsCount = curl_multi_select($multiHandle);
} while ($numberOfMissingHandles &gt; 0);
</code></pre>

<p>Onde <code>$descriptorsCount</code> √© o n√∫mero de handles que possuem alguma atividade nesse exato momento. Caso esse n√∫mero seja
<code>-1</code>, significa que aconteceu algum erro.</p>

<p>Dessa forma esse <em>loop</em> ser√° executado menos vezes e em um intervalo maior, ou seja, menos CPU ser√° consumida.</p>

<h3 id="tratamento-de-erros">Tratamento de erros</h3>

<p>Falando em erros, nosso c√≥digo est√° supondo que tudo vai correr bem. Nesse primeiro <em>loop</em> n√≥s precisamos realizar algumas
verifica√ß√µes. Ent√£o no final, teremos algo como:</p>

<pre><code class="php">do {
    $result = curl_multi_exec($multiHandle, $numberOfMissingHandles);
    if ($result !== CURLM_OK) { // CURLM_OK √© uma constante que indica sucesso nesse caso
        throw new RuntimeException('Error executing all the requests', $result);
    }

    $descriptorsCount = curl_multi_select($multiHandle);
    if ($descriptorsCount === -1) {
        throw new RuntimeException('Error checking for activity');
    }
} while ($numberOfMissingHandles);
</code></pre>

<h3 id="c%C3%B3digo-final">C√≥digo final</h3>

<p>Com isso finalizamos todo o processamento necess√°rio para realizar requisi√ß√µes paralelas com PHP. O c√≥digo completo vai
se parecer com isso:</p>

<pre><code class="php">&lt;?php

$handle = curl_init('https://swapi.dev/api/films/');
curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);
$response = curl_exec($handle);
curl_close($handle);

$data = json_decode($response, true);
$movies = $data['results'];

$multiHandle = curl_multi_init();

$handles = [];
foreach ($movies as $i =&gt; $movie) {
    $url = str_replace('http:', 'https:', $movie['url']);
    $handles[$i] = curl_init($url);
    curl_setopt($handles[$i], CURLOPT_RETURNTRANSFER, true);
    curl_multi_add_handle($multiHandle, $handles[$i]);
}

do {
    $result = curl_multi_exec($multiHandle, $numberOfMissingHandles);
    if ($result !== CURLM_OK) {
        throw new RuntimeException('Error executing all the requests', $result);
    }

    $descriptorsCount = curl_multi_select($multiHandle);
    if ($descriptorsCount === -1) {
        throw new RuntimeException('Error checking for activity');
    }
} while ($numberOfMissingHandles &gt; 0);

foreach ($handles as $handle) {
    $response = curl_multi_getcontent($handle);
    curl_multi_remove_handle($multiHandle, $handle);
    curl_close($handle);

    $movieData = json_decode($response, true);
    var_dump($movieData);
}
</code></pre>

<p>Esse c√≥digo provavelmente pode ser refatorado para torn√°-lo um pouco mais leg√≠vel, mas acredito que a l√≥gica por tr√°s dele
tenha ficado clara. Caso contr√°rio, voc√™ pode usar a sess√£o de coment√°rios dessa p√°gina para fazer perguntas.</p>

<h2 id="benchmarks">Benchmarks</h2>

<p>Agora que temos 2 vers√µes de c√≥digo que resolvem o mesmo problema de formas diferentes, podemos testar a sua performance.
Para quem usa sistemas <em>Unix</em> (<em>Linux</em> ou <em>Mac</em>) existe um comando chamado <code>time</code> que √© muito √∫til para verifica√ß√µes simples
como essas.</p>

<p>A primeira vers√£o do nosso c√≥digo (bloqueante) gera essa informa√ß√£o quando executo o seguinte comando (sendo <code>star-wars.php</code>o nome do nosso arquivo):</p>

<pre><code class="console">$ time php star-wars.php

php star-wars.php  0.14s user 0.04s system 2% cpu 7.186 total
</code></pre>

<p>Basicamente, um pouco mais de 7 segundos foram necess√°rios para executar todas as requisi√ß√µes.</p>

<p>J√° com a vers√£o final do c√≥digo, temos a seguinte sa√≠da:</p>

<pre><code class="console">$ time php star-wars.php

php star-wars.php  0.14s user 0.04s system 6% cpu 2.387 total
</code></pre>

<p>Ou seja, pouco mais de 2 segundos (quase 5 segundos a menos). √â uma baita diferen√ßa para um exemplo t√£o simples, n√£o acha?</p>

<p>Agora um √∫ltimo teste, comentando a parte referente ao <code>curl_multi_select</code>:</p>

<pre><code class="console">$ time php star-wars.php

php star-wars.php  0.50s user 0.70s system 49% cpu 2.421 total
</code></pre>

<p>Repare que o uso de CPU subiu muito. De algo pr√≥ximo de 6% para quase 50%. Esse √© o prop√≥sito da chamada da fun√ß√£o
<code>curl_multi_select</code>.</p>

<h2 id="conclus%C3%A3o">Conclus√£o</h2>

<p>Assim como j√° foi citado no post sobre <a href="/2020-09-16-php-assincrono-de-forma-nativa/">PHP ass√≠ncrono</a>, existem
v√°rias ferramentas que facilitam (e muito) o trabalho de realizar requisi√ß√µes HTTP paralelas com PHP. Guzzle √© uma √≥tima
op√ß√£o para isso.</p>

<p>Mas seguindo o que citei no <a href="/2020-04-23-principios-ou-ferramentas-o-que-estudar/">post sobre aprendizado</a>, eu penso como
Richard Feynman (Nobel de f√≠sica): ‚ÄúO que eu n√£o consigo criar, eu n√£o entendo‚Äù. Ent√£o antes de utilizar uma ferramenta
que realiza o trabalho para mim, eu gosto de saber como realizar este trabalho sem ela. Com isso, se algum problema
acontecer com a biblioteca, por exemplo, eu vou estar mais preparado para resolv√™-lo j√° que entendo um pouco melhor como as coisas funcionam.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PHP ass√≠ncrono de forma nativa]]></title>
            <link href="https://dias.dev/2020-09-16-php-assincrono-de-forma-nativa/"/>
            <updated>2020-09-16T00:00:00+00:00</updated>
            <id>https://dias.dev/2020-09-16-php-assincrono-de-forma-nativa/</id>
            <content type="html"><![CDATA[<p>Realizar acesso a streams √© uma tarefa relativamente comum para devs PHP. Seja lendo e escrevendo em arquivos, fazendo requisi√ß√µes HTTP, etc.</p>

<p>Opera√ß√µes de I/O s√£o custosas e levam algum tempo para serem executadas. Quando temos diversas opera√ß√µes desse tipo, uma t√©cnica que pode ajudar (e muito) na performance da aplica√ß√£o √© realiz√°-las de forma ass√≠ncrona.</p>

<h2 id="acesso-a-streams">Acesso a streams</h2>

<p>Antes de falar sobre t√©cnicas e fun√ß√µes que permitem a programa√ß√£o ass√≠ncrona, √© importante saber como normalmente n√≥s trabalhamos com I/O.</p>

<p>Acesso a arquivos, requisi√ß√µes HTTP, sockets e muito mais pode ser feito atrav√©s de <a href="https://php.net/streams">streams</a>. Um stream √© basicamente um fluxo de dados, sendo que a origem desse fluxo pode variar (vide o in√≠cio desse par√°grafo). Quando utilizamos fun√ß√µes como <code>file_get_contents</code>, <code>fopen</code>, <code>fgets</code>, e as demais, estamos trabalhando com streams do PHP.</p>

<h2 id="programa%C3%A7%C3%A3o-ass%C3%ADncrona">Programa√ß√£o ass√≠ncrona</h2>

<p>Se voc√™ n√£o est√° familiarizado com o termo "programa√ß√£o ass√≠ncrona", recomendo assistir este v√≠deo antes de continuar o artigo:</p>

<p><lite-youtube videoid="zLfXPSeCkB8">
    <a href="https://youtube.com/watch?v=zLfXPSeCkB8" class="lty-playbtn" title="Reproduzir v√≠deo">
        <span class="lyt-visually-hidden">
            Programa√ß√£o ass√≠ncrona vs Programa√ß√£o paralela - Entenda a diferen√ßa | Programando com Vinicius Dias
        </span>
    </a>
</lite-youtube></p>

<p>Entendido o que √© programa√ß√£o ass√≠ncrona, como podemos fazer acesso a streams de forma ass√≠ncrona utilizando PHP sem nenhuma extens√£o ou biblioteca externa? Ser√° poss√≠vel?</p>

<h2 id="eventos">Eventos</h2>

<p>Programa√ß√£o orientada a eventos n√£o √© novidade e n√≥s utilizamos muito na web. Para agir quando um bot√£o for clicado, ou quando um texto for digitado em um <code>input</code> n√≥s utilizamos eventos no JavaScript. Eventos podem acontecer a qualquer momento ent√£o sua natureza √© ass√≠ncrona. Mas ser√° poss√≠vel fazer algo parecido do lado do PHP?</p>

<p>Antes de falar do PHP em si, acho v√°lido citar que o sistema operacional j√° trabalha com chamadas ass√≠ncronas. Diversos eventos acontecem durante a execu√ß√£o do seu sistema, e h√° c√≥digo reagindo a estes eventos o tempo todo. Utilizando PHP n√≥s podemos acessar algumas dessas funcionalidades do sistema operacional</p>

<h3 id="fun%C3%A7%C3%A3o-stream_select">Fun√ß√£o stream_select</h3>

<p>Uma fun√ß√£o n√£o muito comum para n√≥s que trabalhamos com PHP √© a <a href="https://php.net/stream_select">stream_select</a>. Essa fun√ß√£o nos permite "observar" modifica√ß√µes que possam acontecer em streams. O problema √© que ela n√£o √© nada f√°cil de se entender, ent√£o vou tentar tornar este processo menos doloroso para voc√™.</p>

<h2 id="cen%C3%A1rio">Cen√°rio</h2>

<p>Imagine que para executar uma tarefa n√≥s precisemos ler 5 arquivos distintos e depois realizar algum processamento. Normalmente utilizando PHP n√≥s poder√≠amos fazer algo como:</p>

<pre><code class="php">&lt;?php

$conteudoDoArquivo1 = file_get_contents('arquivo1.txt');
$conteudoDoArquivo2 = file_get_contents('arquivo2.txt');
$conteudoDoArquivo3 = file_get_contents('arquivo3.txt');
$conteudoDoArquivo4 = file_get_contents('arquivo4.txt');
$conteudoDoArquivo5 = file_get_contents('arquivo5.txt');

// Processar os 5 arquivos
</code></pre>

<p>O problema nessa abordagem √© √≥bvio: Antes de ler o <code>arquivo2.txt</code> precisamos terminar de ler todo o conte√∫do de <code>arquivo1.txt</code>. Enquanto o computador espera, n√≥s j√° poder√≠amos estar lendo os demais arquivos e os processando de forma individual.</p>

<p>Quando temos uma opera√ß√£o de I/O (acesso a arquivos, rede, etc) sendo realizada de forma s√≠ncrona, o processador fica ocioso enquanto a opera√ß√£o n√£o √© executada. Ou seja, enquanto o arquivo estiver sendo carregado, o processador fica esperando, sem fazer nada. √â exatamente isso que queremos evitar. Queremos garantir que ele continue trabalhando enquanto o arquivo n√£o estiver pronto para leitura.</p>

<h2 id="solu%C3%A7%C3%A3o-com-assincronicidade">Solu√ß√£o com assincronicidade</h2>

<p>Para resolver essa situa√ß√£o, podemos utilizar a fun√ß√£o <code>stream_select</code> que observa altera√ß√µes no status de uma lista de streams, ou seja, quando algum dos arquivos estiver pronto para leitura, essa fun√ß√£o nos avisar√°. E √© interessante citar que a leitura n√£o necessariamente vai acontecer em ordem. O sistema operacional pode abrir o <code>arquivo3.txt</code> mais r√°pido do que o <code>arquivo1.txt</code>, por exemplo. Neste cen√°rio, vamos process√°-lo logo, sem ficar esperando os arquivos anteriores.</p>

<pre><code class="php">&lt;?php

$listaDeStreamsDeArquivos = [
    fopen('arquivo1.txt', 'r'),
    fopen('arquivo2.txt', 'r'),
    fopen('arquivo3.txt', 'r'),
    fopen('arquivo4.txt', 'r'),
    fopen('arquivo5.txt', 'r'),
];

foreach ($listaDeStreamsDeArquivos as $streamDeArquivo) {
    stream_set_blocking($streamDeArquivo, false);
}

do {
    $streamsParaLer = $listaDeStreamsDeArquivos;
    $streamsComNovidades = stream_select($streamsParaLer, $write, $except, 1, 0);

    if ($streamsComNovidades === false) {
        echo 'Erro inesperado';
        exit(1);
    }

    if ($streamsComNovidades === 0) {
        continue;
    }

    foreach ($streamsParaLer as $indice =&gt; $streamDeArquivo) {
        $conteudo = stream_get_contents($streamDeArquivo);
        // processa o conte√∫do do arquivo
        if (feof($streamDeArquivo)) {
            fclose($streamDeArquivo);
            unset($listaDeStreamsDeArquivos[$indice]);
        }
    }
} while ($listaDeStreamsDeArquivos !== []);
</code></pre>

<h3 id="explica%C3%A7%C3%A3o">Explica√ß√£o</h3>

<h4 id="prepara%C3%A7%C3%A3o">Prepara√ß√£o</h4>

<p>Como eu disse, n√£o √© muito f√°cil, ent√£o vamos por partes. Primeiro abrimos todos os arquivos que queremos ler com o <code>fopen</code>. At√© a√≠ sem segredo. Depois, informamos com a fun√ß√£o <code>stream_set_blocking</code> que o recurso deve ser aberto em modo n√£o-bloqueante - assim, o processo que acessa o arquivo n√£o bloquear√° a CPU por causar um estado de espera ao tentar acessar os arquivos.</p>

<p>Nesse ponto, temos um array com 5 recursos abertos para podermos trabalhar com estes streams. Ent√£o analisando o este peda√ßo de c√≥digo:</p>

<pre><code class="php">$listaDeStreamsDeArquivos = [
    fopen('arquivo1.txt', 'r'),
    fopen('arquivo2.txt', 'r'),
    fopen('arquivo3.txt', 'r'),
    fopen('arquivo4.txt', 'r'),
    fopen('arquivo5.txt', 'r'),
];

var_dump($listaDeStreamsDeArquivos);
</code></pre>

<p>Ter√≠amos a seguinte sa√≠da:</p>

<pre><code class="php">array(5) {
  [0]=&gt;
  resource(5) of type (stream)
  [1]=&gt;
  resource(6) of type (stream)
  [2]=&gt;
  resource(7) of type (stream)
  [3]=&gt;
  resource(8) of type (stream)
  [4]=&gt;
  resource(9) of type (stream)
}
</code></pre>

<p>Depois disso que come√ßa a parte dif√≠cil. A chamada para a fun√ß√£o <code>stream_select</code> deve estar em um loop, porque pode acontecer de nem todos os streams estarem prontos para leitura logo de cara.</p>

<h4 id="par%C3%A2metros">Par√¢metros</h4>

<p>Segundo detalhe importante: os par√¢metros. Os 3 primeiros par√¢metros dessa fun√ß√£o s√£o passados por refer√™ncia. Por isso o segundo e terceiro s√£o vari√°veis que n√≥s nem t√≠nhamos definido ainda. O primeiro par√¢metro √© a lista de streams que queremos observar para ler. O segundo √© para escrita. J√° o terceiro, menos comum, √© para dados excepcionais que possuem maior prioridade. Os 2 √∫ltimos par√¢metros s√£o sobre timeout.</p>

<p>O par√¢metro passado como 1 indica o n√∫mero de segundos que essa fun√ß√£o deve esperar receber uma notifica√ß√£o de novidade nos streams at√© "desistir", ou seja, o timeout. Esse √© o motivo pelo qual ela deve estar em um loop. Se esse tempo passar e n√≥s n√£o tivermos novidade, devemos tentar de novo depois. Caso algum (n√£o necessariamente todos) stream esteja pronto antes desse 1 segundo, a fun√ß√£o retornar√°. O √∫ltimo par√¢metro, que informamos como 0, indica o tempo em microsegundos para timeout.</p>

<h4 id="retorno-e-leitura">Retorno e leitura</h4>

<p>Agora vamos falar do retorno. Essa fun√ß√£o retorna o n√∫mero de streams que cont√©m modifica√ß√µes. No nosso caso, vai informar quantos arquivos est√£o prontos para leitura. Por√©m em caso de erro essa fun√ß√£o nos retorna o valor <code>false</code>.</p>

<p>Al√©m disso, os par√¢metros que n√≥s passamos podem ter sido modificados. Por isso eu realizo uma c√≥pia da lista original de streams em <code>$arquivosParaLer = $listaDeArquivos;</code>. Ap√≥s o retorno da fun√ß√£o, o par√¢metro passado vai conter apenas os streams que possuem novidades, ou seja, no nosso caso, os arquivos que est√£o prontos para leitura.</p>

<p>Para exemplificar, vamos supor que na primeira execu√ß√£o do loop todos os arquivos j√° estejam dispon√≠veis. Nesse caso, analisando os valores das vari√°veis, podemos entender o que est√° acontecendo. Analisando ent√£o o valor de <code>$streamsComNovidades</code>, ter√≠amos <code>int(5)</code> como resultado deste cen√°rio.</p>

<p>J√° analisando ambos arrays de streams (<code>$listaDeStreamsDeArquivos</code> e <code>$streamsParaLer</code>), ter√≠amos exatamente o mesmo resultado:</p>

<pre><code class="php">array(5) {
  [0]=&gt;
  resource(5) of type (stream)
  [1]=&gt;
  resource(6) of type (stream)
  [2]=&gt;
  resource(7) of type (stream)
  [3]=&gt;
  resource(8) of type (stream)
  [4]=&gt;
  resource(9) of type (stream)
}
array(5) {
  [0]=&gt;
  resource(5) of type (stream)
  [1]=&gt;
  resource(6) of type (stream)
  [2]=&gt;
  resource(7) of type (stream)
  [3]=&gt;
  resource(8) of type (stream)
  [4]=&gt;
  resource(9) of type (stream)
}
</code></pre>

<p>Agora caso na primeira execu√ß√£o tiv√©ssemos apenas 3 dos 5 arquivos prontos, e analis√°ssemos os 3 valores anteriores, ter√≠amos ter algo como:</p>

<pre><code class="php">var_dump($streamsComNovidades, $listaDeStreamsDeArquivos, $streamsParaLer);
</code></pre>

<pre><code class="php">int(3)
array(5) {
  [0]=&gt;
  resource(5) of type (stream)
  [1]=&gt;
  resource(6) of type (stream)
  [2]=&gt;
  resource(7) of type (stream)
  [3]=&gt;
  resource(8) of type (stream)
  [4]=&gt;
  resource(9) of type (stream)
}
array(3) {
  [0]=&gt;
  resource(5) of type (stream)
  [2]=&gt;
  resource(7) of type (stream)
  [4]=&gt;
  resource(9) of type (stream)
}
</code></pre>

<p>Onde, nesse caso, o segundo array exibido √© o de <code>$streamsParaLer</code>, e possui apenas os 3 arquivos prontos para leitura.</p>

<p>Sendo assim, posso percorrer este array tendo a certeza de que h√° dados para ler e processar. Mas n√£o h√° garantia de que todo o conte√∫do do arquivo estar√° l√°, por isso verifico se cheguei ao fim do arquivo com <code>feof</code>. Para arquivos pequenos, via de regra, todo o conte√∫do vir√° de uma vez s√≥, mas n√£o conte com isso e prepare seu c√≥digo para ler at√© mesmo um √∫nico byte por vez.</p>

<p>Ap√≥s ler todo o arquivo, devemos fech√°-lo. Mas um outro detalhe importante √© que eu tamb√©m o removo da lista original de streams que queremos ler. Fa√ßo isso para que caso seja necess√°ria uma nova itera√ß√£o no loop, ou seja, caso nem todos os arquivos tenham sido lidos, eu n√£o tente ler novamente os arquivos que j√° foram lidos e fechados.</p>

<p>Com isso temos nossa condi√ß√£o de sa√≠da do loop. Quando todos os arquivos tiverem sido removidos e minha lista estiver vazia, sei que processei todos os arquivos.</p>

<p>PS.: A fun√ß√£o <code>stream_set_blocking</code> s√≥ surte efeito com arquivos e sockets. Os outros wrappers, com esta t√©cnica, n√£o podem ser lidos de forma ass√≠ncrona e n√£o bloqueante.</p>

<h2 id="conceitos">Conceitos</h2>

<p>Esse c√≥digo obviamente pode ser refatorado para torn√°-lo um pouco mais leg√≠vel, mas acredito que a l√≥gica por tr√°s dele tenha ficado clara. Caso contr√°rio, voc√™ pode usar a sess√£o de coment√°rios dessa p√°gina para fazer perguntas.</p>

<p>O que n√≥s escrevemos de forma rudimentar aqui pode ser visto como uma implementa√ß√£o do que √© conhecido como <em>Event Loop</em>, ou loop de eventos. Voc√™ provavelmente j√° ouviu esse termo se estuda sobre a runtime Node.js.</p>

<p>Claro que essa implementa√ß√£o n√£o √© completa ou otimizada, mas atende nosso prop√≥sito: ler arquivos conforme eles fiquem prontos para leitura. Dessa forma n√≥s vamos pedir para que o sistema operacional prepare todos os arquivos para leitura de uma s√≥ vez.</p>

<p>As vantagens nessa abordagem ass√≠ncrona s√£o mais percept√≠veis quando temos opera√ß√µes mais lentas como chamadas HTTP, por exemplo. Mas isso aumentaria a complexidade do c√≥digo para este artigo.</p>

<h2 id="conclus%C3%A3o">Conclus√£o</h2>

<p>Claro que o PHP j√° possui ferramentas que realizam este trabalho de forma muito mais simples. ReactPHP com seu pacote de Streams √© um √≥timo exemplo.</p>

<p>Mas seguindo o que citei no post sobre aprendizado, eu penso como <a href="https://pt.wikipedia.org/wiki/Richard_Feynman">Richard Feynman</a> (Nobel de f√≠sica): "O que eu n√£o consigo criar, eu n√£o entendo". Ent√£o antes de utilizar uma ferramenta que realiza o trabalho para mim, eu gosto de saber como realizar este trabalho sem ela. Com isso, se algum problema acontecer com a biblioteca, por exemplo, eu vou estar mais preparado para resolv√™-lo j√° que eu entendo um pouco melhor como as coisas funcionam.</p>

<p>Se voc√™ quiser aprender mais sobre algum desses assuntos, pode considerar assinar a Alura. L√° existem treinamentos (gravados por mim) sobre PHP Streams, ReactPHP e muito mais. Caso pretenda estudar na Alura, <a href="https://tidd.ly/4d42Myb">neste link</a> voc√™ tem um desconto de 15%.</p>
]]></content>
        </entry>
    </feed>