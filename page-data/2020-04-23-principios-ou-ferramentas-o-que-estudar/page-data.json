{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020-04-23-principios-ou-ferramentas-o-que-estudar/","result":{"data":{"site":{"siteMetadata":{"title":"Dias de Dev","siteUrl":"https://dias.dev"}},"markdownRemark":{"id":"7a821320-72eb-58ce-9a46-92253eea7abe","excerpt":"O mundo de desenvolvimento Quando decidimos entrar para o mundo de desenvolvimento, sofremos um bombardeio de informações e novos termos. Linguagens, frameworks…","html":"<h2>O mundo de desenvolvimento</h2>\n<p>Quando decidimos entrar para o mundo de desenvolvimento, sofremos um bombardeio de informações e novos termos.</p>\n<p>Linguagens, frameworks, bibliotecas, paradigmas, princípios, etc. Não é fácil saber que caminho seguir e o que estudar primeiro.</p>\n<p>Obviamente não existe alternativa certa ou errada, então nesse post eu vou somente expor minha opinião. Não tome o que for dito aqui como verdade, mas sim reflita e analise se faz sentido para você.</p>\n<h2>Mercado de trabalho</h2>\n<p>É inegável que para atuar no mercado de trabalho nós precisamos de muito mais conhecimento do que nos é passado inicialmente em qualquer livro, curso ou post de blog. Somente a experiência e vivência vão nos dar a bagagem necessária para resolver os problemas e gerar valor para os clientes.</p>\n<p>Mas isso não quer dizer que nós só devamos estudar o que o emprego atual nos pede. Pelo contrário. Se nós estudamos além do que nos é pedido, ou no caso do primeiro emprego, estudamos antes de algo nos ser cobrado, quando uma oportunidade ou problema surgir, as chances serão muito maiores de estarmos prontos.</p>\n<p>Além de solucionar os problemas ou aproveitar as oportunidades, estudar nos faz conhecer melhores formas de atingir estes objetos, nos dando vantagens competitivas sobre quem simplesmente “resolve o problema”.</p>\n<p>Ok, até aqui só usei o termo “estudo”, mas devemos estudar o que? Ferramentas específicas ou princípios genéricos que podem ser aplicados a várias ferramentas?</p>\n<h2>Linguagens, bibliotecas e frameworks</h2>\n<p>Se você quer entrar para a área de desenvolvimento e acredita que seu trabalho vai ser escrever código, você está enganado(a). O nosso trabalho é solucionar problemas. Código é uma ferramenta, um meio para o fim. Linguagens de programação são apenas ferramentas para nós resolvermos determinados problemas. Frameworks e bibliotecas nada mais são do que ferramentas de “alto nível”, que nos trazem algumas facilidades e alguns problemas genéricos já resolvidos.</p>\n<p>Ah, Vinicius, quer dizer que a escolha da linguagem de programação não é importante? Longe disso! A linguagem de programação é uma ferramenta muito importante para a solução do problema e existem linguagens diferentes para solucionar problemas diferentes. O ponto é: elas são ferramentas.</p>\n<p>Se nós tivermos isso em mente, acabamos deixando de lado aquele tipo de briga de “minha linguagem é melhor que a sua” ou “meu framework é melhor do que o seu”. Discussões desse tipo são interessantes e até emocionantes (eu mesmo adoro falar mal de Laravel ;-p), mas nós não podemos nos cegar achando que realmente há uma ferramenta melhor do que outra e ponto.</p>\n<p><strong>Não existe bala de prata</strong> (solução pra qualquer problema)!</p>\n<p>Assim como cada linguagem resolve um problema, cada framework tem um propósito, uma identidade. Você vai acabar se identificando mais com um ou outro, mas não faça com que isso seja o foco de todo o seu estudo e trabalho. Conhecer muito bem a linguagem e o framework que você utiliza para trabalhar é importante, mas é o primeiro passo?</p>\n<h2>Paradigmas</h2>\n<p>Como eu citei no último parágrafo, “cada linguagem resolve um problema”, e cada linguagem faz isso de um jeito. Existem diversos paradigmas de programação, dentre eles:</p>\n<ul>\n<li>\n<p>Declarativos</p>\n<ul>\n<li>Programação funcional</li>\n</ul>\n</li>\n<li>\n<p>Imperativos</p>\n<ul>\n<li>Programação procedural</li>\n<li>Programação orientada a objetos</li>\n</ul>\n</li>\n</ul>\n<p>Entender bem as vantagens e desvantagens de cada paradigma e as diferenças entre eles é crucial para aprender qualquer linguagem de programação. Diversas linguagens modernas são o que chamamos de “multi-paradigma”, ou seja, nos permitem utilizar mais de um paradigma em nosso código, como procedural e Orientado a Objetos, funcional e Orientado a objetos, funcional e procedural, etc.</p>\n<p>Este post (em inglês) fala com bem mais de detalhes sobre os principais paradigmas de programação e alguns exemplos de linguagens:</p>\n<p><a href=\"https://dev.to/vplentinax/classification-of-computer-languages-ii-2201\">https://dev.to/vplentinax/classification-of-computer-languages-ii-2201</a></p>\n<p>Se você (assim como eu) prefere vídeos, pode conferir este aqui:</p>\n<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <iframe src=\"https://www.youtube-nocookie.com/embed/asFnD-JLFWs\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<h2>Princípios</h2>\n<p>Cada paradigma de programação (e suas respectivas linguagens suportadas) sugerem diversos princípios para que seu código seja de fácil manutenção, testável, legível, etc.</p>\n<p>Princípios muito comuns da programação orientada a objetos (paradigma que estudo mais a fundo) são:</p>\n<ul>\n<li><a href=\"https://youtu.be/7IXeLhpjk6g\">Tell, don’t ask</a>;</li>\n<li>Least astonishment;</li>\n<li>*<a href=\"https://youtu.be/6mfX6863SAk\">Fail fast</a>;</li>\n<li>*Early return;</li>\n<li><a href=\"https://amzn.to/2PAWL60\">SOLID</a> (conjunto de princípios);</li>\n<li>etc.</li>\n</ul>\n<p><em>* Princípios também aplicáveis a outros paradigmas</em></p>\n<p>Estudar os princípios referentes ao paradigma que você escolher é fundamental para manter seu código saudável. Não aplicá-los pode dar a falsa impressão de que você está sendo mais produtivo(a), mas a longo prazo a verdade sempre surge e nós acabamos nos arrependendo.</p>\n<h2>Padrões</h2>\n<p>Tendo entendido o que são paradigmas e que cada um deles possui princípios, baseando-se nestes princípios surgem padrões. Os famosos <em>Padrões de Projeto</em> são basicamente soluções padrões para problemas genéricos. São sugestões de como proceder em determinadas situações.</p>\n<p>Certos problemas são tão comuns de acontecer, que pessoas através dos anos já estudaram e discutiram muito sobre as melhores formas de resolvê-los.</p>\n<p>Alguns dos padrões mais famosos seguindos os princípios da programação orientada a objetos são:</p>\n<ul>\n<li>\n<p><a href=\"https://amzn.to/3fN9aOS\">Padrões da “turma dos 4” (<em>Gang of Four “GoF”</em>)</a></p>\n<ul>\n<li>24 padrões (super famosos) separados em 3 categorias</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://youtu.be/z4fxFU5MoAA\">Object calisthenics</a></p>\n<ul>\n<li>9 regras para exercitar em seus códigos</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://amzn.to/3fN9aOS\">Sugeridos pelo “desenvolvimento guiado a domínio” (<em>DDD</em>)</a></p>\n<ul>\n<li>Conhecidos como blocos de construção do <em>DDD</em> como <em>Entity</em>, <em>Value Object</em>, etc.</li>\n</ul>\n</li>\n</ul>\n<p>Como citado no início do capítulo, cada padrão visa resolver problemas bem comuns e genéricos, e devem ser aplicados quando fazem sentido. Os padrões exemplificados estão em níveis bem diferentes de sua aplicação e explicá-los individualmente é impossível através de um único post.</p>\n<h2>O que estudar primeiro?</h2>\n<p>Como foi dito lá no início, esse post é para que eu expressar <strong>minha opinião</strong>.</p>\n<p>Na minha visão, devemos estudar o básico dos paradigmas de programação, entendendo qual problema cada um resolve e em que casos são usados. Após entendê-los, normalmente nos aprofundamos em 1 deles, mas existe um porém:\nAntes de aprender Orientação a Objetos, é importante conhecermos o paradigma procedural, visto que o primeiro surgiu para resolver determinados problemas do último.</p>\n<p>Para estudar um dos paradigmas, obviamente precisamos de uma linguagem de programação, então este estudo acontece em paralelo: Conhecemos uma linguagem enquanto conhecemos um paradigma.</p>\n<p>Após dominar razoavelmente bem os conceitos da linguagem e do paradigma em questão, podemos começar a estudar os princípios sugeridos, entendendo suas propostas, quais problemas resolvem, porque surgiram, etc.</p>\n<p>Estes princípios, normalmente nos levam naturalmente para o estudo de alguns padrões. O estudo de padrões já é um estudo mais avançado, porém muito recompensante.</p>\n<p>Se você tem um bom conhecimento de um paradigma (e consequentemente, uma linguagem), alguns de seus princípios e padrões, pode ser o momento de aprender a utilizar ferramentas que auxiliem no processo.</p>\n<p>Frameworks e bibliotecas são ferramentas que facilitam a resolução de problemas <strong>que você deveria saber resolver sem elas</strong>. Richard Feynman, ganhador do Nobel de física, escreveu uma vez: “What I cannot create I do not understand”. Traduzindo: “O que eu não consigo criar eu não entendo”.</p>\n<p>Então antes de utilizar um framework, sabia resolver o problema sem ele. Antes de utilizar uma biblioteca mais específica, saiba resolver o problema sem ela. Isso faz com que você consiga resolver um problema nas ferramentas, caso aconteça.</p>","frontmatter":{"title":"Princípios ou Ferramentas - O que estudar","date":"23 de abril de 2020","description":"O início no mundo de desenvolvimento não é fácil. Estudar um framework específico, uma ou várias linguagens? Nesse artigo eu comento sobre práticas e princípios a se estudar"}}},"pageContext":{"slug":"/2020-04-23-principios-ou-ferramentas-o-que-estudar/","previous":{"fields":{"slug":"/2020-04-16-programacao-procedural-orientada-a-classes-parte-2/"},"frontmatter":{"title":"Programação procedural orientada a classes - Parte 2"}},"next":{"fields":{"slug":"/2020-09-16-php-assincrono-de-forma-nativa/"},"frontmatter":{"title":"PHP assíncrono de forma nativa"}}}},"staticQueryHashes":["2841359383","3257411868"]}